"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[1480],{2459:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"references/custom-selectors","title":"Custom Selector","description":"You use custom selectors to define an alias that can match complex selectors.","source":"@site/docs/references/custom-selectors.md","sourceDirName":"references","slug":"/references/custom-selectors","permalink":"/docs/references/custom-selectors","draft":false,"unlisted":false,"editUrl":"https://github.com/wixplosives/stylable.io/edit/master/docs/references/custom-selectors.md","tags":[],"version":"current","frontMatter":{"id":"custom-selectors","title":"Custom Selector"},"sidebar":"Specification Reference","previous":{"title":"url()","permalink":"/docs/references/using-external-assets"},"next":{"title":"Extend","permalink":"/docs/references/extend-stylesheet"}}');var t=n(4848),c=n(8453);const r={id:"custom-selectors",title:"Custom Selector"},l=void 0,i={},a=[{value:"Usage",id:"usage",level:2},{value:"Expose pseudo-element",id:"expose-pseudo-element",level:3},{value:"Use cases",id:"use-cases",level:2},{value:"Container and recursive components",id:"container-and-recursive-components",level:3},{value:"Expose inner parts that are deeply defined",id:"expose-inner-parts-that-are-deeply-defined",level:3},{value:"Combination selector",id:"combination-selector",level:3},{value:"Group of selectors",id:"group-of-selectors",level:3},{value:"Issues to consider",id:"issues-to-consider",level:4}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["You use ",(0,t.jsx)(s.a,{href:"https://drafts.csswg.org/css-extensions/#custom-selectors",children:"custom selectors"})," to define an alias that can match complex selectors."]}),"\n",(0,t.jsx)(s.p,{children:"For example, a specific type of button within a form that appears only when hovered can be defined as a custom selector. By defining the button as a custom selector with its own name, the button is exposed in the API and available for use by using just the custom selector name."}),"\n",(0,t.jsx)(s.p,{children:"You could also use custom selectors to define a group of selectors with one name. For example, you can access all the headings on a page as one custom selector. This could be useful if you want to style just their color the same."}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:["The following code maps the alias name ",(0,t.jsx)(s.code,{children:"controlBtn"})," that matches any ",(0,t.jsx)(s.code,{children:".btn"})," CSS class nested under the ",(0,t.jsx)(s.code,{children:".controls"})," CSS class."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="comp.st.css"',children:"@custom-selector :--controlBtn .controls .btn;\n/* \nselector: .comp__controls .comp__btn \n*/\n:--controlBtn {\n  border: 1px solid grey;\n}\n/* \nselector: .comp__controls .comp__btn:hover \n*/\n:--controlBtn:hover {\n  border-color: red;\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"expose-pseudo-element",children:"Expose pseudo-element"}),"\n",(0,t.jsxs)(s.p,{children:["Custom selectors generate a ",(0,t.jsx)(s.a,{href:"/docs/references/pseudo-elements",children:"pseudo-element"}),". So, for example, ",(0,t.jsx)(s.a,{href:"/docs/references/imports",children:"importing"})," a stylesheet into another stylesheet enables access to the ",(0,t.jsx)(s.code,{children:"controlBtn"})," pseudo-element. In this example, the stylesheet ",(0,t.jsx)(s.code,{children:"comp.st.css"})," from the previous example is imported into this stylesheet."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="page.st.css"',children:'@st-import Comp from "./comp.st.css";\n\n/*\nselector: .comp__root .comp__controls .comp__btn\n*/\nComp::controlbtn {\n  background: gold;\n}\n'})}),"\n",(0,t.jsx)(s.admonition,{type:"caution",children:(0,t.jsxs)(s.p,{children:["If a ",(0,t.jsx)(s.code,{children:"custom-selector"})," alias conflicts with a local CSS class name, the exposed ",(0,t.jsx)(s.code,{children:"pseudo-element"})," targets the ",(0,t.jsx)(s.code,{children:"custom-selector"}),". However, the exported CSS class is still exported to JavaScript."]})}),"\n",(0,t.jsx)(s.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,t.jsxs)(s.p,{children:["The following examples demonstrate how to effectively use custom selectors in ",(0,t.jsx)(s.strong,{children:"Stylable"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"container-and-recursive-components",children:"Container and recursive components"}),"\n",(0,t.jsx)(s.p,{children:'Some components might contain nested instances of themselves because they\'re a container or a "recursive" component. For example, a tree component might render itself.'}),"\n",(0,t.jsxs)(s.p,{children:["If the component exposes any ",(0,t.jsx)(s.code,{children:"pseudo-elements"}),", it is a good practice to define them as ",(0,t.jsx)(s.code,{children:"custom selectors"})," with ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Child_selectors",children:"child selectors"})," to avoid affecting the inner parts of internal instances."]}),"\n",(0,t.jsx)(s.p,{children:"The following example shows how a tree component exposes an icon."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="tree.st.css"',children:"@custom-selector :--icon .root > .icon;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Here you can use the icon ",(0,t.jsx)(s.code,{children:"custom selector"})," from the outside just like you would use any other ",(0,t.jsx)(s.code,{children:"pseudo-element"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="panel.st.css"',children:'@st-import Tree from "./tree.st.css";\n\n/*\nselector: .tree__root > .tree__icon\n*/\nTree::icon {\n  background: yellow; /* paints the icons all the way down the tree */\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"expose-inner-parts-that-are-deeply-defined",children:"Expose inner parts that are deeply defined"}),"\n",(0,t.jsxs)(s.p,{children:["When you want to make internal parts of your component API more accessible, you can describe ",(0,t.jsx)(s.code,{children:"pseudo-elements"})," using ",(0,t.jsx)(s.code,{children:"custom selectors"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["For example, you can expose a ",(0,t.jsx)(s.code,{children:"pseudo-element"})," named ",(0,t.jsx)(s.code,{children:"navigationBtn"})," that enables you to style an internal gallery component's ",(0,t.jsx)(s.code,{children:"navBtn"})," element."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",children:'@st-import Gallery from "./gallery.st.css";\n\n@custom-selector :--navigationBtn Gallery::navbtn;\n'})}),"\n",(0,t.jsx)(s.h3,{id:"combination-selector",children:"Combination selector"}),"\n",(0,t.jsxs)(s.p,{children:["You may have a component with several basic CSS classes and with corresponding ",(0,t.jsx)(s.code,{children:"pseudo-elements"}),". You could expose a combination ",(0,t.jsx)(s.code,{children:"pseudo-element"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["For example, a ",(0,t.jsx)(s.code,{children:"pseudo-element"})," named ",(0,t.jsx)(s.code,{children:"navBtn"})," matches any ",(0,t.jsx)(s.code,{children:"btn"})," CSS class nested in a ",(0,t.jsx)(s.code,{children:"nav"})," CSS class."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="comp.st.css"',children:"@custom-selector :--navBtn .nav .btn;\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="page.st.css"',children:'@st-import Comp from "./comp.st.css";\n\n/*\nselector: .comp__root .comp__nav .comp__btn\n*/\nComp::navbtn {\n  border: 1px solid grey;\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"group-of-selectors",children:"Group of selectors"}),"\n",(0,t.jsx)(s.p,{children:"You could also use custom selectors to gather a collection of selectors into a single selector. For example, you may want to access media that includes both images and videos."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="comp.st.css"',children:"@custom-selector :--media .image, .video;\n/*\nselector: \n.comp__image, .comp__video \n*/\n:--media {\n  border: 1px solid grey;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"issues-to-consider",children:"Issues to consider"}),"\n",(0,t.jsxs)(s.p,{children:["Aliasing multiple selectors in a ",(0,t.jsx)(s.code,{children:"custom selector"})," may generate lots of CSS that could affect performance."]}),"\n",(0,t.jsxs)(s.p,{children:["For example, when you import the ",(0,t.jsx)(s.code,{children:"Comp"})," stylesheet (the selector described in the previous example) into another stylesheet, in the output the selector is split for each override."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-css",metastring:'title="page.st.css"',children:'@st-import Comp from "./comp.st.css";\n\nComp::media {\n  border-color: red;\n}\n\n/* OUTPUT */\n.comp__root .comp__image,\n.comp__root .comp__video {\n  border-color: red;\n}\n'})})]})}function m(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var o=n(6540);const t={},c=o.createContext(t);function r(e){const s=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(c.Provider,{value:s},e.children)}}}]);