"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[9604],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var s=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=s.createContext({}),c=function(e){var t=s.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return s.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?s.createElement(g,l(l({ref:t},p),{},{components:n})):s.createElement(g,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return s.createElement.apply(null,l)}return s.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(7462),a=(n(7294),n(3905));const r={id:"extend-stylesheet",title:"Extend Stylable Stylesheet"},l=void 0,o={unversionedId:"references/extend-stylesheet",id:"references/extend-stylesheet",title:"Extend Stylable Stylesheet",description:"Use the -st-extends directive rule to extend a CSS class with another stylesheet. This enables you to style pseudo-classes and pseudo-elements of the extended stylesheet.",source:"@site/docs/references/extend-stylesheet.md",sourceDirName:"references",slug:"/references/extend-stylesheet",permalink:"/docs/references/extend-stylesheet",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/extend-stylesheet.md",tags:[],version:"current",frontMatter:{id:"extend-stylesheet",title:"Extend Stylable Stylesheet"},sidebar:"Specification Reference",previous:{title:"Tag/Component Selector",permalink:"/docs/references/tag-selectors"},next:{title:"Pseudo-Classes",permalink:"/docs/references/pseudo-classes"}},i={},c=[{value:"Extending stylesheets vs. classes",id:"extending-stylesheets-vs-classes",level:2},{value:"Extending a root",id:"extending-a-root",level:3},{value:"Extending an inner part",id:"extending-an-inner-part",level:3},{value:"Extending example",id:"extending-example",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"-st-extends")," directive rule to extend a CSS class with another stylesheet. This enables you to style ",(0,a.kt)("a",{parentName:"p",href:"/docs/references/pseudo-classes"},"pseudo-classes")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/references/pseudo-elements"},"pseudo-elements")," of the extended stylesheet."),(0,a.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("inlineCode",{parentName:"p"},"-st-extends")," can be applied only to ",(0,a.kt)("a",{parentName:"p",href:"/docs/references/class-selectors"},"class selectors")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/references/root"},"root"),"."))),(0,a.kt)("p",null,"In this example, the stylesheet is extending the ",(0,a.kt)("inlineCode",{parentName:"p"},"toggle-button.st.css")," stylesheet. The ",(0,a.kt)("inlineCode",{parentName:"p"},"checkBtn")," class has a ",(0,a.kt)("inlineCode",{parentName:"p"},"label"),", which is a custom pseudo-element, and has a custom pseudo-class, ",(0,a.kt)("inlineCode",{parentName:"p"},"toggled"),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n\n@st-import ToggleButton from "./toggle-button.st.css";\n\n.checkBtn {\n    -st-extends: ToggleButton;\n    background: white;\n}\n.checkBtn::label { color: green; } /* style pseudo element label */\n.checkBtn:toggled::label { color: red; } /* style pseudo element label when check-box is toggled */\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__checkBtn { background: white; }\n.Page__checkBtn .ToggleButton__label { color: green; }\n.Page__checkBtn.ToggleButton--toggled .ToggleButton__label { color: red; }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/* page.jsx */\nimport React from 'react';\nimport { style, classes } from './comp.st.css';\n\nimport ToggleButton from './toggle-button';\n\nclass Page {\n    constructor(props) {\n        super(props);\n    }\n\n    render () {\n        return (\n            <div className={style(classes.root, this.props.className) }>\n                <ToggleButton className={classes.checkBtn} />\n            </div>\n        );\n    }\n}\n")),(0,a.kt)("h2",{id:"extending-stylesheets-vs-classes"},"Extending stylesheets vs. classes"),(0,a.kt)("p",null,"Stylable offers you the ability to import a stylesheet (default import) or class (named import). The two methods differ in their runtime export values."),(0,a.kt)("h3",{id:"extending-a-root"},"Extending a root"),(0,a.kt)("p",null,"When extending a ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," class, Stylable assumes the component itself will place its own ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," class, and as such Stylable exports only the local className during runtime. "),(0,a.kt)("p",null,"The extended component will receive the extending (external) class name through its props and concat it to the ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," node class list."),(0,a.kt)("h3",{id:"extending-an-inner-part"},"Extending an inner part"),(0,a.kt)("p",null,"Any class other than ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," defined in a Stylesheet is considered an inner part. Usually in Stylable extending a class signifies the use of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/component-variants"},"variant")," or composed* utility class."),(0,a.kt)("p",null,"*"," - Stylable currently does not support composing multiple classes on the same part. We hope to introduce this capability in the near future."),(0,a.kt)("h3",{id:"extending-example"},"Extending example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n\n@st-import ToggleButton from "./toggle-button.st.css";\n@st-import [toggleVariant] from "./toggle-button-variant.st.css";\n\n.defaultCheckBtn {\n    -st-extends: ToggleButton; /* extending stylesheet */\n}\n.variantCheckBtn {\n    -st-extends: toggleVariant; /* extending class */\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__defaultCheckBtn {}\n.Page__variantCheckBtn {}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'/* runtime JS output*/\nimport { classes } from \'./page.st.css\';\n\nconsole.log(classes.defaultCheckBtn) // "Page__defaultCheckBtn"\nconsole.log(classes.variantCheckBtn) // "Page__variantCheckBtn ToggleButton__toggleVariant"\n')))}d.isMDXComponent=!0}}]);