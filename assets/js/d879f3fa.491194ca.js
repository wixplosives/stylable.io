"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[7381],{8514:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"references/layer","title":"Layer","description":"In CSS, @layer provides a way to group rules together in order to override other rules for better control of the styling order.","source":"@site/docs/references/layer.md","sourceDirName":"references","slug":"/references/layer","permalink":"/docs/references/layer","draft":false,"unlisted":false,"editUrl":"https://github.com/wixplosives/stylable.io/edit/master/docs/references/layer.md","tags":[],"version":"current","frontMatter":{"id":"layer","title":"Layer"},"sidebar":"Specification Reference","previous":{"title":"Keyframes","permalink":"/docs/references/keyframes"},"next":{"title":"Pseudo-Class","permalink":"/docs/references/pseudo-classes"}}');var a=s(4848),t=s(8453);const l={id:"layer",title:"Layer"},i=void 0,o={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Import and Export",id:"import-and-export",level:2},{value:"Native CSS import",id:"native-css-import",level:3},{value:"Runtime",id:"runtime",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Disable namespace",id:"disable-namespace",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["In CSS, ",(0,a.jsx)(n.code,{children:"@layer"})," provides a way to group rules together in order to override other rules for better control of the styling order."]}),"\n",(0,a.jsxs)(n.p,{children:["This page goes over how Stylable handles ",(0,a.jsx)(n.code,{children:"@layer"}),", for more details about the language feature itself, check out the following resources:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@layer",children:"MDN @layer"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/",children:"The Future of CSS: Cascade Layers by Bramus"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://drafts.csswg.org/css-cascade-5/#layering",children:"CSS cascade spec"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Layer order definition"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"@layer base, layout, theme;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Layer style definition"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"@layer theme {\n  /* layer style rules */\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Nested style definition"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"@layer theme {\n  @layer app {\n    /* layer style rules */\n  }\n}\n\n/* equivalent to */\n\n@layer theme.app {\n  /* layer style rules */\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"import-and-export",children:"Import and Export"}),"\n",(0,a.jsxs)(n.p,{children:["An exported layer definition can be imported into another stylesheet with the ",(0,a.jsx)(n.a,{href:"/docs/references/imports",children:(0,a.jsx)(n.code,{children:"@st-import"})})," atrule."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Insert rules into imported layer"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* get base layer definition from another stylesheet */\n@st-import [layer(base)] from './x.st.css';\n\n/* insert rules into layer */\n@layer base {\n  /* layer style rules */\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"More import examples"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* map 'base' layer to local name 'x-base' */\n@st-import [layer(base as x-base)] from './x.st.css';\n\n/* import multiple layers */\n@st-import [layer(layerA, layerB)] from './x.st.css';\n"})}),"\n",(0,a.jsx)(n.h3,{id:"native-css-import",children:"Native CSS import"}),"\n",(0,a.jsxs)(n.p,{children:["CSS native ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@import",children:(0,a.jsx)(n.code,{children:"@import"})})," can be used to import a stylesheet into a layer:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* import the content of 'other.css' in the base layer */\n@import url(./x.css) layer(base);\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"While Stylable collects and namespaces layer definitions from native CSS imports, it does not handle bundling of them at current time, and they are not recommended for use."})}),"\n",(0,a.jsx)(n.h2,{id:"runtime",children:"Runtime"}),"\n",(0,a.jsxs)(n.p,{children:["A layer can be accessed for dynamic styles using the ",(0,a.jsx)(n.code,{children:"layers"})," mapping on the ",(0,a.jsx)(n.strong,{children:"Stylable"})," runtime stylesheet:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import { layers } from './sheet.st.css';\n\n// map to target namespaced layer\nlayers['layer-name'];\n"})}),"\n",(0,a.jsx)(n.h2,{id:"namespace",children:"Namespace"}),"\n",(0,a.jsx)(n.p,{children:"Stylable automatically namespaces any layer name according to the stylesheet it is defined in:"}),"\n",(0,a.jsx)(n.p,{children:"Source:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"@layer base, layout, theme;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"@layer ns__base, ns__layout, ns__theme;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"disable-namespace",children:"Disable namespace"}),"\n",(0,a.jsxs)(n.p,{children:["In some cases the default namespace behavior is unwanted, for example when a layer is external and not defined or imported by Stylable. In such cases, ",(0,a.jsx)(n.code,{children:"st-global"})," can be used to mark a layer definition as global:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* keep the layer name as-is with no namespace */\n@layer st-global(external);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once a layer is marked as global, all references to that layer transpile to the un-namespaced name (nested or imported)."}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Notice that ",(0,a.jsx)(n.code,{children:"st-global"})," is not supported in nested definitions (e.g. ",(0,a.jsx)(n.code,{children:"a.st-global(external).c"}),") or native import (e.g. ",(0,a.jsx)(n.code,{children:"@import url() layer(st-global(external))"}),"), but marking the layer as global in a later definition will keep it global everywhere."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var r=s(6540);const a={},t=r.createContext(a);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);