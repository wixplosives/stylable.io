"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[5232],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,y=u["".concat(i,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(y,s(s({ref:t},d),{},{components:n})):a.createElement(y,s({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5900:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={id:"pseudo-elements",title:"Pseudo-Element"},s=void 0,l={unversionedId:"references/pseudo-elements",id:"references/pseudo-elements",title:"Pseudo-Element",description:"In addition to CSS's native pseudo-elements, Stylable stylesheets automatically expose CSS classes as custom pseudo-elements. This enables you to access internal parts of a component to apply styling.",source:"@site/docs/references/pseudo-elements.md",sourceDirName:"references",slug:"/references/pseudo-elements",permalink:"/docs/references/pseudo-elements",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/pseudo-elements.md",tags:[],version:"current",frontMatter:{id:"pseudo-elements",title:"Pseudo-Element"},sidebar:"Specification Reference",previous:{title:"Pseudo-Class",permalink:"/docs/references/pseudo-classes"},next:{title:"Custom Property",permalink:"/docs/references/css-vars"}},i={},p=[{value:"Define a custom pseudo-element",id:"define-a-custom-pseudo-element",level:2},{value:"Style a custom pseudo-element",id:"style-a-custom-pseudo-element",level:2},{value:"Extend a stylesheet&#39;s pseudo-element",id:"extend-a-stylesheets-pseudo-element",level:2},{value:"Override a custom pseudo-element",id:"override-a-custom-pseudo-element",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In addition to CSS's native ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en/docs/Web/CSS/Pseudo-elements"},"pseudo-elements"),", ",(0,o.kt)("strong",{parentName:"p"},"Stylable")," stylesheets automatically expose CSS classes as custom pseudo-elements. This enables you to access internal parts of a component to apply styling."),(0,o.kt)("h2",{id:"define-a-custom-pseudo-element"},"Define a custom pseudo-element"),(0,o.kt)("p",null,"Any ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/class-selectors"},"CSS class")," is accessible as a pseudo-element of an ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/extend-stylesheet"},"extending stylesheet"),"."),(0,o.kt)("p",null,"When you define a CSS class inside a component, in this case a ",(0,o.kt)("inlineCode",{parentName:"p"},"playButton")," in a ",(0,o.kt)("inlineCode",{parentName:"p"},"VideoPlayer"),", that class may be targeted as a pseudo-element of any class that extends the component ",(0,o.kt)("inlineCode",{parentName:"p"},"videoPlayer"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'/* video-player.st.css */\n@namespace "VideoPlayer";\n.root {\n}\n.playButton {\n  background: black;\n  color: white;\n}\n')),(0,o.kt)("h2",{id:"style-a-custom-pseudo-element"},"Style a custom pseudo-element"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"::")," to access an internal part of a component after a ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/tag-selectors#component-element"},"custom element type selector")," or after an ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/extend-stylesheet"},"extended class selector"),"."),(0,o.kt)("p",null,"In this example, you ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/imports"},"import")," a ",(0,o.kt)("inlineCode",{parentName:"p"},"VideoPlayer")," component into your stylesheet, and style an internal part called ",(0,o.kt)("inlineCode",{parentName:"p"},"playButton")," overriding its original styling."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "Page";\n@st-import VideoPlayer from "./video-player.st.css";\n.mainVideo {\n  -st-extends: VideoPlayer; /* define mainVideo as VideoPlayer */\n}\n.mainVideo::playbutton {\n  /* override mainVideo playButton */\n  background: green;\n  color: purple;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__mainVideo.VideoPlayer__root {\n}\n.Page__mainVideo.VideoPlayer__root .VideoPlayer__playButton {\n  background: green;\n  color: purple;\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Custom pseudo-elements are not limited to the end of a selector like native pseudo-elements, and they can be chained. For example, you can access the label of a navigation button from a gallery: ",(0,o.kt)("inlineCode",{parentName:"p"},".myGallery::navBtn::label"),".")),(0,o.kt)("h2",{id:"extend-a-stylesheets-pseudo-element"},"Extend a stylesheet's pseudo-element"),(0,o.kt)("p",null,"When a Stylable stylesheet ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/root"},"root")," extends another stylesheet, pseudo-elements are automatically exposed on the extending stylesheet and available inline."),(0,o.kt)("p",null,"In this example, the class ",(0,o.kt)("inlineCode",{parentName:"p"},"playButton")," is available from the original component file ",(0,o.kt)("inlineCode",{parentName:"p"},"video-player.css"),", and extended and styled in the ",(0,o.kt)("inlineCode",{parentName:"p"},"super-video-player.css")," stylesheet as a custom pseudo-element on the ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," class."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"page.css")," stylesheet can then extend ",(0,o.kt)("inlineCode",{parentName:"p"},"super-video-player.css")," and on the ",(0,o.kt)("inlineCode",{parentName:"p"},".mainPlayer")," class, style ",(0,o.kt)("inlineCode",{parentName:"p"},"playButton")," differently."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'/* super-video-player.st.css */\n@namespace "SuperVideoPlayer";\n@st-import VideoPlayer from "./video-player.st.css";\n.root {\n  -st-extends: VideoPlayer;\n}\n.root::playbutton {\n  color: gold;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.SuperVideoPlayer__root.VideoPlayer__root {\n}\n.SuperVideoPlayer__root.VideoPlayer__root .VideoPlayer__playButton {\n  color: gold;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n@st-import SuperVideoPlayer from "./super-video-player.st.css";\n.mainPlayer {\n  -st-extends: SuperVideoPlayer;\n}\n.mainPlayer::playbutton {\n  color: silver;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__mainPlayer.SuperVideoPlayer__root {\n}\n.Page__mainPlayer.SuperVideoPlayer__root .VideoPlayer__playButton {\n  color: silver;\n}\n")),(0,o.kt)("h2",{id:"override-a-custom-pseudo-element"},"Override a custom pseudo-element"),(0,o.kt)("p",null,"You can use CSS classes to override extended pseudo-elements."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You can also override native pseudo-elements using ",(0,o.kt)("strong",{parentName:"p"},"Stylable's")," custom pseudo-elements but this is not recommended as it can lead to code that's confusing and hard to maintain.")),(0,o.kt)("p",null,"In this example, ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," extends ",(0,o.kt)("inlineCode",{parentName:"p"},"VideoPlayer")," and so any class placed on the ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," overrides the pseudo-element."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "SuperVideoPlayer";\n@st-import VideoPlayer from "./video-player.st.css";\n.root {\n  -st-extends: VideoPlayer;\n}\n.playButton {\n  /* override VideoPlayer playButton */\n  color: gold;\n}\n.root::playbutton {\n  color: grey;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.SuperVideoPlayer__root.VideoPlayer__root {\n}\n.SuperVideoPlayer__playButton {\n  color: gold;\n}\n.SuperVideoPlayer__root.VideoPlayer__root .VideoPlayer__playButton {\n  color: grey;\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Overriding pseudo-elements changes the targeting in the overriding stylesheet and not in the stylesheet being extended.")))}c.isMDXComponent=!0}}]);