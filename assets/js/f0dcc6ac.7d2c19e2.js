"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[7001],{6048:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"references/contains","title":"Containers","description":"CSS container queries are used to target and style an element depending on the conditions of a container it is nested within.","source":"@site/docs/references/contains.md","sourceDirName":"references","slug":"/references/contains","permalink":"/docs/references/contains","draft":false,"unlisted":false,"editUrl":"https://github.com/wixplosives/stylable.io/edit/master/docs/references/contains.md","tags":[],"version":"current","frontMatter":{"id":"contains","title":"Containers"},"sidebar":"Specification Reference","previous":{"title":"Class Selector","permalink":"/docs/references/class-selectors"},"next":{"title":"Custom Property","permalink":"/docs/references/css-vars"}}');var s=t(4848),i=t(8453);const r={id:"contains",title:"Containers"},o=void 0,c={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Import and Export",id:"import-and-export",level:2},{value:"Runtime",id:"runtime",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Disable namespace",id:"disable-namespace",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"CSS container queries are used to target and style an element depending on the conditions of a container it is nested within."}),"\n",(0,s.jsxs)(n.p,{children:["This page goes over how Stylable handles the ",(0,s.jsx)(n.code,{children:"container-name"})," declaration and the ",(0,s.jsx)(n.code,{children:"@container"})," at-rule, for more details about the language feature itself, check out the following resources:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries",children:"MDN CSS container queries"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://drafts.csswg.org/css-contain-3",children:"CSS contains spec"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Container definition"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".panel {\n  /* longhand */\n  container-name: panel;\n\n  /* shorthand */\n  container-name: panel / inline-size;\n\n  /* longhand with multiple names */\n  container-name: panel side;\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"soft definition",type:"note",children:(0,s.jsxs)(n.p,{children:["A container name symbol is defined using the ",(0,s.jsx)(n.code,{children:"container/container-name"})," declaration only when not explicitly defined by an import or a ",(0,s.jsxs)(n.a,{href:"#disable-namespace",children:["global ",(0,s.jsx)(n.code,{children:"@container"})," definition"]}),"."]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"@container panel (width <= 250px) {\n  /* style nested rules */\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"import-and-export",children:"Import and Export"}),"\n",(0,s.jsxs)(n.p,{children:["An exported container can be imported into another stylesheet with the ",(0,s.jsx)(n.a,{href:"/docs/references/imports",children:"@st-import"})," at-rule."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Style nested container rules"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"/* get 'panel' container definition from another stylesheet */\n@st-import [container(panel)] from './x.st.css';\n\n@container panel (width <= 150px) {\n    /* nested container rules */\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"More import examples"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"/* map 'panel' container to local name 'x-panel' */\n@st-import [container(panel as x-panel)] from './x.st.css';\n\n/* import multiple containers */\n@st-import [container(panel, header)] from './x.st.css';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"runtime",children:"Runtime"}),"\n",(0,s.jsx)(n.p,{children:"A Container definition can be accessed to generate dynamic styles using the containers mapping on the Stylable runtime stylesheet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { containers } from './sheet.st.css';\n\n// map to target namespaced container\ncontainers.panel;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"namespace",children:"Namespace"}),"\n",(0,s.jsx)(n.p,{children:"Stylable automatically namespaces any container name according to the stylesheet it is defined in:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".x {\n  container: panel;\n}\n\n@container panel (width > 100px) {}\n\n/* OUTPUT */\n.x {\n  container: NAMESPACE__panel;\n}\n\n@container NAMESPACE__panel (width > 100px) {}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"disable-namespace",children:"Disable namespace"}),"\n",(0,s.jsxs)(n.p,{children:["In some cases the default namespace behavior is unwanted. In such cases, ",(0,s.jsx)(n.code,{children:"st-global"})," can be used to set a container name as global:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".x {\n  container: st-global(panel);\n}\n\n@container st-global(panel) (width > 100px) {}\n\n/* OUTPUT */\n.x {\n  container: panel;\n}\n\n@container panel (width > 100px) {}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["::note global without symbol deinition\nSetting ",(0,s.jsx)(n.code,{children:"st-global"})," around the container name in either the declaration or container query only references a global container name, without creating a symbol that can later be imported or referenced.\n::"]}),"\n",(0,s.jsxs)(n.p,{children:["To register a global container name symbol, that can be imported and referenced by other stylesheets, use the ",(0,s.jsx)(n.code,{children:"@container"})," at-rule with no body or query:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"/* global panel container name definition */\n@container st-global(panel);\n\n.x {\n  container: panel;\n}\n@container panel (width > 100px) {}\n\n\n/* OUTPUT */\n\n.x {\n  container: panel;\n}\n@container panel (width > 100px) {}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);