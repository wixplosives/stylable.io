"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[741],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),m=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=m(n),u=r,d=f["".concat(i,".").concat(u)]||f[u]||c[u]||s;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=f;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<s;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8953:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return p},default:function(){return f}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),l=["components"],o={id:"keyframes",title:"Keyframes"},i=void 0,m={unversionedId:"references/keyframes",id:"references/keyframes",isDocsHomePage:!1,title:"Keyframes",description:"In CSS, @keyframes exhibit a behavior similar to classes where all names are global and can potentially clash in the DOM.",source:"@site/docs/references/keyframes.md",sourceDirName:"references",slug:"/references/keyframes",permalink:"/docs/references/keyframes",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/keyframes.md",tags:[],version:"current",frontMatter:{id:"keyframes",title:"Keyframes"},sidebar:"Specification Reference",previous:{title:"Using External Assets",permalink:"/docs/references/using-external-assets"}},p=[{value:"Example",id:"example",children:[],level:3},{value:"Imports and Exports",id:"imports-and-exports",children:[{value:"Example",id:"example-1",children:[],level:3},{value:"Keyframes aliasing",id:"keyframes-aliasing",children:[],level:3}],level:2},{value:"Runtime mapping",id:"runtime-mapping",children:[{value:"Example",id:"example-2",children:[],level:3}],level:2},{value:"Global keyframes",id:"global-keyframes",children:[],level:2}],c={toc:p};function f(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In CSS, ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes"},(0,s.kt)("inlineCode",{parentName:"a"},"@keyframes"))," exhibit a behavior similar to classes where all names are global and can potentially clash in the DOM."),(0,s.kt)("p",null,"To avoid this issue, ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," performs automatic namespacing of keyframes based on the stylesheet in which they were created."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "Comp";\n\n@keyframes slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n.root { \n    animation-name: slide; \n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n\n@keyframes Comp__slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n.Comp__root { \n    animation-name: Comp__slide;\n}\n")),(0,s.kt)("h2",{id:"imports-and-exports"},"Imports and Exports"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Stylable")," automatically exports all keyframes created within a stylesheet. ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," will also re-export any imported keyframes."),(0,s.kt)("p",null,"To import any such symbol in a different stylesheet, ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," uses a utility function, ",(0,s.kt)("inlineCode",{parentName:"p"},"keyframes([NAME1, NAME2, ...])")," to specifically target keyframes imports."),(0,s.kt)("h3",{id:"example-1"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'/* index.st.css */\n\n:import {\n    -st-from: "./animations.st.css";\n    -st-named: keyframes(slideX, slideY);\n}\n\n.root { animation-name: slideX; }\n\n.part { animation-name: slideY; }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"/* animations.st.css */\n\n@keyframes slideX {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n@keyframes slideY {\n  from { transform: translateY(0%); }\n  to { transform: translateY(100%); }\n}\n")),(0,s.kt)("h3",{id:"keyframes-aliasing"},"Keyframes aliasing"),(0,s.kt)("p",null,"To create a local alias of a keyframe, Stylable supports the same ",(0,s.kt)("inlineCode",{parentName:"p"},"[NAME] as [NEW_NAME]")," syntax inside the keyframe import utility, as it does for any named import."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},':import {\n    -st-from: "./animations.st.css";\n    -st-named: keyframes(slide as mySlide),\n               somePart as myPart;\n}\n')),(0,s.kt)("p",null,"Note that this keyframe will be re-exported under its new alias name, and not the original imported name."),(0,s.kt)("h2",{id:"runtime-mapping"},"Runtime mapping"),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," runtime stylesheet exposes the ",(0,s.kt)("inlineCode",{parentName:"p"},"keyframes")," key which contains a mapping of source keyframe names to their namespaced target name.\nYou can use these keyframes to apply animations via inline styling."),(0,s.kt)("h3",{id:"example-2"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "Comp";\n\n@keyframes slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"import { classes, keyframes } from './entry.st.css';\n\n<div className={classes.root}\n     style={{ animationName: keyframes.slide }} >\n</div>\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'/* DOM output */\n\n<div className="Comp__root"\n     style="animation-name: Comp__slide;" >\n</div>\n')),(0,s.kt)("h2",{id:"global-keyframes"},"Global keyframes"),(0,s.kt)("p",null,"To create global (unscoped) keyframes, ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," provides ",(0,s.kt)("inlineCode",{parentName:"p"},"st-global")," function which accepts a global keyframe name as its parameter."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"@keyframes st-global(slide) {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n\n@keyframes slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n")))}f.isMDXComponent=!0}}]);