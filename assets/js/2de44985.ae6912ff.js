"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[3242],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var r=a.createContext({}),p=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(r.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,l=e.originalType,r=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=s,k=m["".concat(r,".").concat(u)]||m[u]||c[u]||l;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var r in t)hasOwnProperty.call(t,r)&&(i[r]=t[r]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),s=(n(7294),n(4137));const l={id:"migration-v3",title:"Stylable v3"},o=void 0,i={unversionedId:"guides/migration-v3",id:"guides/migration-v3",title:"Stylable v3",description:"This guide is intended to help migrate Stylable version 1 to Stylable version 2 or 3.",source:"@site/docs/guides/migration-v3.md",sourceDirName:"guides",slug:"/guides/migration-v3",permalink:"/docs/guides/migration-v3",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/guides/migration-v3.md",tags:[],version:"current",frontMatter:{id:"migration-v3",title:"Stylable v3"},sidebar:"Guides",previous:{title:"Server Side Rendering",permalink:"/docs/guides/ssr"},next:{title:"Stylable v5",permalink:"/docs/guides/migration-v5"}},r={},p=[{value:"Update dependencies",id:"update-dependencies",level:2},{value:"Update <code>.st.css</code> file imports",id:"update-stcss-file-imports",level:2},{value:"CSS custom properties",id:"css-custom-properties",level:3},{value:"Update usage in React components",id:"update-usage-in-react-components",level:2},{value:"Update tests",id:"update-tests",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This guide is intended to help migrate Stylable version 1 to Stylable version 2 or 3.\nIt is mainly geared towards Stylable integration in React projects."),(0,s.kt)("h1",{id:"suggested-steps-of-migration"},"Suggested steps of migration"),(0,s.kt)("p",null,"Follow these steps for a smooth transition. Each step is explained in\nmore detail below."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Update dependencies"),(0,s.kt)("li",{parentName:"ol"},"Update global typings"),(0,s.kt)("li",{parentName:"ol"},"Update ",(0,s.kt)("inlineCode",{parentName:"li"},".st.css")," file imports"),(0,s.kt)("li",{parentName:"ol"},"Update usage in React components"),(0,s.kt)("li",{parentName:"ol"},"Update tests")),(0,s.kt)("h2",{id:"update-dependencies"},"Update dependencies"),(0,s.kt)("p",null,"Ensure you have v3 Stylable dependencies available. You may need to\nupdate your ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")," or ensure that other dependencies bring you\nv3 Stylable:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"@stylable/cli")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"@stylable/core")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"@stylable/runtime")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"@stylable/node")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"@stylable/webpack-plugin"))),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"all Stylable packages in v3 are scoped under the ",(0,s.kt)("inlineCode",{parentName:"p"},"@stylable")," namespace.\nif you have dependencies like ",(0,s.kt)("inlineCode",{parentName:"p"},"stylable")," (without scope), it is the old one and should be changed to scoped version.")),(0,s.kt)("h1",{id:"update-global-typings"},"Update global typings"),(0,s.kt)("p",null,"If TypeScript is used in the project, we recommend updating the global typings\n(usually ",(0,s.kt)("inlineCode",{parentName:"p"},"globals.d.ts"),") with an ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," module declaration:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"declare module '*.st.css' {\n  const stylesheet: import('@stylable/runtime').RuntimeStylesheet;\n  export = stylesheet;\n}\n")),(0,s.kt)("p",null,"This way the TypeScript compiler will help refactor most of the\nrequired changes and provide typings for other Stylable use cases."),(0,s.kt)("h2",{id:"update-stcss-file-imports"},"Update ",(0,s.kt)("inlineCode",{parentName:"h2"},".st.css")," file imports"),(0,s.kt)("p",null,"Prior to v2 all ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," files would export a default ",(0,s.kt)("inlineCode",{parentName:"p"},"style")," function. In v2\nthis has changed: ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," files now export a named object."),(0,s.kt)("p",null,"List of all exported keys:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  st, // alias to `style`\n  classes,\n  cssStates,\n  keyframes,\n  namespace,\n  stVars,\n  style,\n  vars,\n} from './style.st.css';\n")),(0,s.kt)("p",null,"This means that all imports of ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," files have to be changed, for example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"-import style from './Component.st.css';\n+import { st, classes, /* ... */ } from './Component.st.css';\n")),(0,s.kt)("p",null,"However, most often ",(0,s.kt)("inlineCode",{parentName:"p"},"{ st, classes }")," is enough:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"import { st, classes } from './Component.st.css';")),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," files export a ",(0,s.kt)("inlineCode",{parentName:"p"},"style")," function and an alias to it -\n",(0,s.kt)("inlineCode",{parentName:"p"},"st"),". It is recommended to use ",(0,s.kt)("inlineCode",{parentName:"p"},"st")," in order to avoid name clashing\nwith other variables (for example, some other inline style).")),(0,s.kt)("h3",{id:"css-custom-properties"},"CSS custom properties"),(0,s.kt)("p",null,"Stylable now localizes CSS Custom Properties. This means that any usage of Custom Proprties (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"--prop"),") should now be incorparated in the component code."),(0,s.kt)("p",null,"See the docs about ",(0,s.kt)("a",{parentName:"p",href:"https://stylable.io/docs/references/css-vars"},"CSS custom properties")," for usage examples."),(0,s.kt)("h2",{id:"update-usage-in-react-components"},"Update usage in React components"),(0,s.kt)("p",null,"Once ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," imports are updated, React components should be updated too:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"-<div {...style('root', states, props)} />\n+<div className={st(classes.root, states, props.className)} />\n")),(0,s.kt)("p",null,"There are subtle but very important nuances in this change."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Stylable v1 used spread pattern. It would take the output of ",(0,s.kt)("inlineCode",{parentName:"p"},"style('root', states, this.props)")," function and spread it on component."),(0,s.kt)("p",{parentName:"li"},"This way one or more props would be applied to the component. Thus, code that looks like this:"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'<div\n  {...style(\n    "root",\n    {},\n    { className: "additional-class", "data-hook": "test" }\n  )}\n/>\n')),(0,s.kt)("p",null,"once evaluated, would behave like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'<div className="root additional-class" data-hook="test" />\n')),(0,s.kt)("p",null,"Stylable v2 and v3 usage is like so:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"className={st(classes.root, states, this.props.className)}\n")),(0,s.kt)("p",null,"There is no props spreading anymore and Stylable requires only\n",(0,s.kt)("inlineCode",{parentName:"p"},"className")," to be used."),(0,s.kt)("p",null,"However, if you were relying on the props spread pattern, in v2 and v3 you\nmight find some props missing."),(0,s.kt)("p",null,"Therefore, with Stylable v3 it is up to you to apply any additional props:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'<div\n  className={st(classes.root, states, "additional-class")}\n  data-hook="test"\n  hello="world"\n/>\n')),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Stylable v1 ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," would accept unscoped css class name as a string",(0,s.kt)("br",{parentName:"p"}),"\n","This is no longer acceptable in Stylable v2 or v3, for example:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"-<div {...style('root', state, { className: 'additional-class-name' })} />\n+<div className={style(classes.root, 'additional-class-name')} />\n")),(0,s.kt)("p",{parentName:"li"},"note that ",(0,s.kt)("inlineCode",{parentName:"p"},"classes.root")," comes from ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css"),", which is the correct\nway to import class names."),(0,s.kt)("p",{parentName:"li"},"Similar scoping is applied to css variables too, imported from ",(0,s.kt)("inlineCode",{parentName:"p"},"vars")))),(0,s.kt)("p",null,"Note: find more details and examples in our ",(0,s.kt)("a",{parentName:"p",href:"../references/runtime"},"Runtime reference"),"."),(0,s.kt)("h2",{id:"update-tests"},"Update tests"),(0,s.kt)("p",null,"If you were using ",(0,s.kt)("inlineCode",{parentName:"p"},"@stylable/dom-test-kit")," in Stylable v1, it's usage is\nslightly different in v2 and v3:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff"},"import { StylableDOMUtil } from '@Stylable/dom-test-kit';\n-import style from './Component.st.css';\n+import * as styleSheet from './Component.st.css';\n\n-const StylableDOMUtil = new StylableDOMUtil(style);\n+const StylableDOMUtil = new StylableDOMUtil(styleSheet);\n")),(0,s.kt)("p",null,"Stylable v2 and v3 ",(0,s.kt)("inlineCode",{parentName:"p"},"StylableDOMUtil")," expects to receive an argument which is the whole stylesheet exported from a ",(0,s.kt)("inlineCode",{parentName:"p"},".st.css")," file"),(0,s.kt)("p",null,"Prior to v2 it was only one thing - the ",(0,s.kt)("inlineCode",{parentName:"p"},"style")," function."))}c.isMDXComponent=!0}}]);