"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"Discover":[{"type":"link","label":"Intro","href":"/docs/getting-started/intro","docId":"getting-started/intro"},{"type":"link","label":"Installation","href":"/docs/getting-started/install-configure","docId":"getting-started/install-configure"},{"type":"link","label":"Stylable Intelligence","href":"/docs/getting-started/stylable-intelligence","docId":"getting-started/stylable-intelligence"},{"type":"category","label":"Integrations","collapsed":false,"items":[{"type":"link","label":"NextJS","href":"/docs/getting-started/nextjs-integration","docId":"getting-started/nextjs-integration"},{"type":"link","label":"Rollup","href":"/docs/getting-started/rollup-integration","docId":"getting-started/rollup-integration"},{"type":"link","label":"Storybook","href":"/docs/getting-started/storybook-integration","docId":"getting-started/storybook-integration"},{"type":"link","label":"TypeScript","href":"/docs/getting-started/typescript-integration","docId":"getting-started/typescript-integration"},{"type":"link","label":"Webpack","href":"/docs/getting-started/webpack-integration","docId":"getting-started/webpack-integration"}],"collapsible":true,"href":"/docs/getting-started/integrations"}],"Guides":[{"type":"category","label":"Handbook","collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/docs/guides/handbook/intro","docId":"guides/handbook/intro"},{"type":"link","label":"Classes","href":"/docs/guides/handbook/class","docId":"guides/handbook/class"},{"type":"link","label":"Namespacing","href":"/docs/guides/handbook/namespacing","docId":"guides/handbook/namespacing"},{"type":"link","label":"Custom State","href":"/docs/guides/handbook/custom-state","docId":"guides/handbook/custom-state"},{"type":"link","label":"Runtime","href":"/docs/guides/handbook/runtime","docId":"guides/handbook/runtime"},{"type":"link","label":"Import Class","href":"/docs/guides/handbook/import-class","docId":"guides/handbook/import-class"},{"type":"link","label":"Extend","href":"/docs/guides/handbook/extend","docId":"guides/handbook/extend"}],"collapsible":true},{"type":"category","label":"Patterns","collapsed":true,"items":[{"type":"link","label":"Component Best Practices","href":"/docs/guides/component-best-practices","docId":"guides/component-best-practices"},{"type":"link","label":"Project Commons","href":"/docs/guides/project-commons","docId":"guides/project-commons"},{"type":"link","label":"Shared Classes","href":"/docs/guides/shared-classes","docId":"guides/shared-classes"},{"type":"link","label":"Component Variants","href":"/docs/guides/component-variants","docId":"guides/component-variants"}],"collapsible":true},{"type":"link","label":"Server Side Rendering","href":"/docs/guides/ssr","docId":"guides/ssr"},{"type":"category","label":"Migrations","collapsed":true,"items":[{"type":"link","label":"Stylable v3","href":"/docs/guides/migration-v3","docId":"guides/migration-v3"},{"type":"link","label":"Stylable v5","href":"/docs/guides/migration-v5","docId":"guides/migration-v5"}],"collapsible":true}],"Specification Reference":[{"type":"link","label":"Cheatsheet","href":"/docs/references/cheatsheet","docId":"references/cheatsheet"},{"type":"category","label":"CSS","collapsed":false,"items":[{"type":"link","label":"Class Selector","href":"/docs/references/class-selectors","docId":"references/class-selectors"},{"type":"link","label":"Containers","href":"/docs/references/contains","docId":"references/contains"},{"type":"link","label":"Custom Property","href":"/docs/references/css-vars","docId":"references/css-vars"},{"type":"link","label":"Keyframes","href":"/docs/references/keyframes","docId":"references/keyframes"},{"type":"link","label":"Layer","href":"/docs/references/layer","docId":"references/layer"},{"type":"link","label":"Pseudo-Class","href":"/docs/references/pseudo-classes","docId":"references/pseudo-classes"},{"type":"link","label":"Pseudo-Element","href":"/docs/references/pseudo-elements","docId":"references/pseudo-elements"},{"type":"link","label":"Type Selector","href":"/docs/references/type-selectors","docId":"references/type-selectors"},{"type":"link","label":"url()","href":"/docs/references/using-external-assets","docId":"references/using-external-assets"}],"collapsible":true},{"type":"category","label":"Stylable","collapsed":false,"items":[{"type":"link","label":"Import","href":"/docs/references/imports","docId":"references/imports"},{"type":"link","label":"Root","href":"/docs/references/root","docId":"references/root"},{"type":"link","label":"Extend","href":"/docs/references/extend-stylesheet","docId":"references/extend-stylesheet"},{"type":"link","label":"Global Selector","href":"/docs/references/global-selectors","docId":"references/global-selectors"},{"type":"link","label":"Custom Selector","href":"/docs/references/custom-selectors","docId":"references/custom-selectors"},{"type":"link","label":"Scope","href":"/docs/references/st-scope","docId":"references/st-scope"},{"type":"link","label":"Namespace","href":"/docs/references/namespace","docId":"references/namespace"}],"collapsible":true},{"type":"category","label":"Templating","collapsed":true,"items":[{"type":"link","label":"Variables","href":"/docs/references/st-variables","docId":"references/st-variables"},{"type":"link","label":"Mixins","href":"/docs/references/mixins","docId":"references/mixins"},{"type":"link","label":"Formatters","href":"/docs/references/formatters","docId":"references/formatters"}],"collapsible":true},{"type":"link","label":"Runtime","href":"/docs/references/runtime","docId":"references/runtime"}]},"docs":{"attributions":{"id":"attributions","title":"Attributions","description":"Landing Page Images"},"getting-started/install-configure":{"id":"getting-started/install-configure","title":"Installation","description":"There are currently two options for installing and working with Stylable as described in the following sections.","sidebar":"Discover"},"getting-started/intro":{"id":"getting-started/intro","title":"Intro","description":"What is Stylable","sidebar":"Discover"},"getting-started/nextjs-integration":{"id":"getting-started/nextjs-integration","title":"NextJS","description":"There are a few steps you need to follow to integrate Stylable into your NextJS project.","sidebar":"Discover"},"getting-started/rollup-integration":{"id":"getting-started/rollup-integration","title":"Rollup","description":"The Stylable Rollup integration provides development, build, and bundle capabilities.","sidebar":"Discover"},"getting-started/storybook-integration":{"id":"getting-started/storybook-integration","title":"Storybook","description":"To integrate Stylable with Storybook, you need to do two things:","sidebar":"Discover"},"getting-started/stylable-intelligence":{"id":"getting-started/stylable-intelligence","title":"Stylable Intelligence","description":"Stylable Intelligence is an extension implementing the Language Server Protocol that provides IDE support for Stylable. It currently includes:","sidebar":"Discover"},"getting-started/typescript-integration":{"id":"getting-started/typescript-integration","title":"TypeScript","description":"Whenever a TypeScript file imports a Stylable stylesheet, you must provide a type for it. This is because TypeScript has no way of knowing what\'s inside Stylable *.st.css files.","sidebar":"Discover"},"getting-started/webpack-integration":{"id":"getting-started/webpack-integration","title":"Webpack","description":"The Stylable Webpack integration provides development, build, and bundle capabilities.","sidebar":"Discover"},"guides/component-best-practices":{"id":"guides/component-best-practices","title":"Stylable Component - Best Practices","description":"Stylable components should be easily stylable and themable from the outside. This means that the stylesheet describing the component CSS should be as simple and generic as possible, and should expose a clear and concise API for its internal parts.","sidebar":"Guides"},"guides/component-variants":{"id":"guides/component-variants","title":"Component Variants","description":"When building a component library or an application, it is useful to define several semantic \\"flavors\\" of some components, for example a Button component that represents cancel.","sidebar":"Guides"},"guides/handbook/class":{"id":"guides/handbook/class","title":"Classes","description":"Classes are the most basic building block of stylable, used to mark elements on the DOM, so those could in turn be targeted and styled via our CSS.","sidebar":"Guides"},"guides/handbook/classes":{"id":"guides/handbook/classes","title":"Classes","description":"- opening intro paragraph"},"guides/handbook/custom-state":{"id":"guides/handbook/custom-state","title":"Custom State","description":"In CSS, we have the ability to target native states of various elements using the pseudo-class syntax (for instance,active).","sidebar":"Guides"},"guides/handbook/extend":{"id":"guides/handbook/extend","title":"Extend","description":"In the Import Class chapter, we saw how we can import CSS classes and target them by composing a selector to target our desired parts.","sidebar":"Guides"},"guides/handbook/import-class":{"id":"guides/handbook/import-class","title":"Import Class","description":"In the Runtime chapter, we saw how a Stylable stylesheet\'s API can be imported into a JavaScript module, and how that API can be used. In this chapter, we\'ll see how our game example can be divided into linked stylesheet modules to provide a better development experience.","sidebar":"Guides"},"guides/handbook/intro":{"id":"guides/handbook/intro","title":"Introduction","description":"What am I reading?","sidebar":"Guides"},"guides/handbook/namespacing":{"id":"guides/handbook/namespacing","title":"Namespacing","description":"In the Classes chapter, we briefly explained the concept of using namespacing to avoid conflicts between stylesheets.","sidebar":"Guides"},"guides/handbook/runtime":{"id":"guides/handbook/runtime","title":"Runtime","description":"In the previous chapter, we saw brief examples of mapping our classes local names to their global namespaced names at runtime, as well as the cssStates utility function to activate their states.","sidebar":"Guides"},"guides/migration-v3":{"id":"guides/migration-v3","title":"Stylable v3","description":"This guide is intended to help migrate Stylable version 1 to Stylable version 2 or 3.","sidebar":"Guides"},"guides/migration-v5":{"id":"guides/migration-v5","title":"Stylable v5","description":"The purpose of this document is to help migrate projects using Stylable to v5.","sidebar":"Guides"},"guides/project-commons":{"id":"guides/project-commons","title":"Project Commons","description":"The goal of the project file is to contain the CSS commons for the project, including variables, component variants and shared classes.","sidebar":"Guides"},"guides/shared-classes":{"id":"guides/shared-classes","title":"Shared Classes","description":"When building a component library or an application, it is useful to reuse classes that can be shared across components to achieve common CSS with lower specificity.","sidebar":"Guides"},"guides/ssr":{"id":"guides/ssr","title":"Supporting Server Side Rendering","description":"Server side rendering (SSR) is an approach to serving JavaScript rendered web applications (such as React, Vue, Angular, etc...) that tries to improve time-to-paint, SEO support and more.","sidebar":"Guides"},"references/cheatsheet":{"id":"references/cheatsheet","title":"Cheatsheet","description":"CSS Terminology","sidebar":"Specification Reference"},"references/class-selectors":{"id":"references/class-selectors","title":"Class Selector","description":"A CSS class selector is used as a generic way to target a DOM element with a matching class name. In Stylable a CSS class is used primarily as a component part, for example a .navBtn of gallery component, but can also be used as utility class or a mixin.","sidebar":"Specification Reference"},"references/contains":{"id":"references/contains","title":"Containers","description":"CSS container queries are used to target and style an element depending on the conditions of a container it is nested within.","sidebar":"Specification Reference"},"references/css-vars":{"id":"references/css-vars","title":"Custom Property","description":"CSS custom property is used to define and re-use variables that participate in the cascade, and to dynamically change their values at runtime.","sidebar":"Specification Reference"},"references/custom-selectors":{"id":"references/custom-selectors","title":"Custom Selector","description":"You use custom selectors to define an alias that can match complex selectors.","sidebar":"Specification Reference"},"references/extend-stylesheet":{"id":"references/extend-stylesheet","title":"Extend","description":"The Stylable -st-extends declaration is used to indicate that a CSS class inherits from a stylesheet or another class.","sidebar":"Specification Reference"},"references/formatters":{"id":"references/formatters","title":"Formatters","description":"Formatters are functions that return a single CSS declaration value. They can receive arguments, process them and return the value.","sidebar":"Specification Reference"},"references/global-selectors":{"id":"references/global-selectors","title":"Global Selector","description":"In Stylable, selectors are namespaced to the stylesheet. However there might be cases where you want to target global selectors without Stylable namespacing them, For that you can use the :global() selector.","sidebar":"Specification Reference"},"references/imports":{"id":"references/imports","title":"Import","description":"The Stylable @st-import at-rule is used to reference definitions from other .st.css or .js modules in a similar way to JavaScript Imports.","sidebar":"Specification Reference"},"references/keyframes":{"id":"references/keyframes","title":"Keyframes","description":"The @keyframes CSS at-rule is used to define an animation that can be referenced to animate a DOM element.","sidebar":"Specification Reference"},"references/layer":{"id":"references/layer","title":"Layer","description":"In CSS, @layer provides a way to group rules together in order to override other rules for better control of the styling order.","sidebar":"Specification Reference"},"references/mixins":{"id":"references/mixins","title":"Mixins","description":"Stylable mixins enable you to reuse complex styles and CSS behaviors, defined in CSS or Javascript, and apply them to any style-rule during build time.","sidebar":"Specification Reference"},"references/namespace":{"id":"references/namespace","title":"Namespace","description":"Manual Namespace","sidebar":"Specification Reference"},"references/pseudo-classes":{"id":"references/pseudo-classes","title":"Pseudo-Class","description":"In addition to CSS\'s native pseudo-classes, likenth-child(), Stylable allow you to define custom pseudo-classes so that you can apply styles to your components based on state. Let\'s say you want a component to have different styling applied to it when its content is loading. You can define loading as a custom pseudo-class and toggle it in your component.","sidebar":"Specification Reference"},"references/pseudo-elements":{"id":"references/pseudo-elements","title":"Pseudo-Element","description":"In addition to CSS\'s native pseudo-elements, like ::backdrop, Stylable allow you to define custom pseudo-elements so that you can target and apply styles to inner parts of your components.","sidebar":"Specification Reference"},"references/root":{"id":"references/root","title":"Root","description":"Every Stylable stylesheet has a reserved class called root that matches the root node of the component. The root class is used to signify the component top-level node where a new namespace scope is created.","sidebar":"Specification Reference"},"references/runtime":{"id":"references/runtime","title":"Runtime","description":"Imported Stylable stylesheets in JavaScript contain minimal runtime code to help define the structure and state of the component.","sidebar":"Specification Reference"},"references/st-scope":{"id":"references/st-scope","title":"Scope","description":"Stylable scope enables you to wrap several style-rules using a single directive.","sidebar":"Specification Reference"},"references/st-variables":{"id":"references/st-variables","title":"Variables","description":"Stylable variables provide a way to define common values to be used across the stylesheet and exposed for sharing and theming.","sidebar":"Specification Reference"},"references/type-selectors":{"id":"references/type-selectors","title":"Type Selector","description":"A CSS type selector is used to target DOM elements according to their tag name.","sidebar":"Specification Reference"},"references/using-external-assets":{"id":"references/using-external-assets","title":"url()","description":"Stylable supports usage of url functions to use assets as you normally would in CSS.","sidebar":"Specification Reference"},"style-guide":{"id":"style-guide","title":"Style Guide","description":"You can write content using GitHub-flavored Markdown syntax."}}}')}}]);