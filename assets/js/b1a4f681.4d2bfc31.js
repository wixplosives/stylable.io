"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[6755],{7286:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=t(5893),a=t(1151),r=t(7416);const l={id:"extend",title:"Extend",pagination_next:null},i=void 0,o={id:"guides/handbook/extend",title:"Extend",description:"In the Import Class chapter, we saw how we can import CSS classes and target them by composing a selector to target our desired parts.",source:"@site/docs/guides/handbook/extend.mdx",sourceDirName:"guides/handbook",slug:"/guides/handbook/extend",permalink:"/docs/guides/handbook/extend",draft:!1,unlisted:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/guides/handbook/extend.mdx",tags:[],version:"current",frontMatter:{id:"extend",title:"Extend",pagination_next:null},sidebar:"Guides",previous:{title:"Import Class",permalink:"/docs/guides/handbook/import-class"}},c={},d=[{value:"Extend a stylesheet",id:"extend-a-stylesheet",level:2},{value:"Apply the extending class",id:"apply-the-extending-class",level:3},{value:"Access inner parts",id:"access-inner-parts",level:3},{value:"Access a state",id:"access-a-state",level:3},{value:"Extend multiple levels",id:"extend-multiple-levels",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components},{Details:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["In the ",(0,n.jsx)(s.a,{href:"/docs/guides/handbook/import-class",children:"Import Class chapter"}),", we saw how we can import CSS classes and target them by composing a selector to target our desired parts."]}),"\n",(0,n.jsx)(s.p,{children:"In this chapter, we'll see how to extend a stylesheet to target inner parts and states."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Current status:"})}),"\n","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="player.st.css"',children:".root {\n  -st-states: registered,\n              ranking(enum(first, second, third));\n}\n.avatar {}\n.username {}\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="game.st.css"',children:'@st-import Player, [avatar, username] from "./player.st.css";\n\nPlayer {\n  background: blue;\n}\nPlayer .avatar {\n  border-radius: 50%;\n}\nPlayer .username {\n  text-transform: uppercase;\n}\n'})}),"\n","\n",(0,n.jsxs)(s.p,{children:["Previously, we manually customized the ",(0,n.jsx)(s.code,{children:"Player"})," component by creating a selector that includes a ",(0,n.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator",children:"descendant combinator"})," between the ",(0,n.jsx)(s.code,{children:"Player"})," and our targeted parts. This selector is based on knowledge we have about the ",(0,n.jsx)(s.code,{children:"Player"})," component structure, but this structure might change in the future, and break our assumptions."]}),"\n",(0,n.jsx)(s.h2,{id:"extend-a-stylesheet",children:"Extend a stylesheet"}),"\n",(0,n.jsxs)(s.p,{children:["To help us abstract our selector, we'll extend the ",(0,n.jsx)(s.code,{children:"Player"})," stylesheet to gain access to the stylesheet API, letting us target inner parts using ",(0,n.jsx)(s.a,{href:"/docs/references/pseudo-elements",children:"custom pseudo-elements"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["We'll first set the ",(0,n.jsx)(s.code,{children:"-st-extends"})," property with the value of the imported ",(0,n.jsx)(s.code,{children:"Player"})," stylesheet on the local ",(0,n.jsx)(s.code,{children:"player"})," class."]}),"\n","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="game.st.css"',children:'@st-import Player from "./player.st.css";\n\n.player {\n    -st-extends: Player;\n}\n'})}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Namespacing output"}),(0,n.jsx)(r.Z,{title:"game.st.css",language:"css",children:'@st-import Player from "./player.st.css";\n  \n/* customizing class, local namespace */\n.game__player {\n    -st-extends: Player;\n}'})]}),"\n","\n",(0,n.jsxs)(s.p,{children:["We ",(0,n.jsx)(s.a,{href:"/docs/guides/handbook/import-class#stylesheet-root-selector",children:"previously saw"})," that we can't simply target an imported stylesheet, as that would affect all instances of it."]}),"\n",(0,n.jsxs)(s.p,{children:["Here, by using the ",(0,n.jsx)(s.code,{children:"-st-extends"})," property on a local class, we are scoping these customizations to the subtree of our component stylesheet."]}),"\n",(0,n.jsx)(s.h3,{id:"apply-the-extending-class",children:"Apply the extending class"}),"\n",(0,n.jsxs)(s.p,{children:["To customize a ",(0,n.jsx)(s.code,{children:"Player"})," component instance using our local stylesheet, we will need to apply the extending local class to the instance of the component."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:"import Player from './player.jsx';\nimport { st, classes } from './game.st.css';\n\nconst Game = ({ className }) => (\n  <div className={st(classes.root, className)}>\n    <Player className={classes.player} />\n  </div>\n);\n"})}),"\n",(0,n.jsx)(s.h3,{id:"access-inner-parts",children:"Access inner parts"}),"\n",(0,n.jsxs)(s.p,{children:["We can now use the custom pseudo-element syntax to safely target the ",(0,n.jsx)(s.code,{children:"avatar"})," and ",(0,n.jsx)(s.code,{children:"username"})," parts of the ",(0,n.jsx)(s.code,{children:"Player"})," component."]}),"\n","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="game.st.css"',children:'@st-import Player from "./player.st.css";\n\n.player {\n  -st-extends: Player;\n}\n.player::avatar {\n  border-radius: 50%;\n}\n.player::username {\n  text-transform: uppercase;\n}\n'})}),"\n",(0,n.jsxs)(t,{children:[(0,n.jsx)("summary",{children:"Namespacing output"}),(0,n.jsx)(r.Z,{title:"game.st.css",language:"css",children:'@st-import Player from "./player.st.css";\n  \n.game__player {\n  -st-extends: Player;\n}\n.game__player .player__avatar {\n  border-radius: 50%;\n}\n.game__player .player__username {\n  text-transform: uppercase;\n}'})]}),"\n","\n",(0,n.jsx)(s.h3,{id:"access-a-state",children:"Access a state"}),"\n",(0,n.jsx)(s.p,{children:"Similar to how we used custom pseudo-elements to access inner parts of a component externally, we can now target custom pseudo-classes (states) of our extended parts as well."}),"\n","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="game.st.css"',children:'@st-import Player from "./player.st.css";\n\n.player {\n  -st-extends: Player;\n}\n.player:ranking(first) {\n  background: gold;\n}\n/* ... */\n'})}),"\n","\n",(0,n.jsx)(s.h2,{id:"extend-multiple-levels",children:"Extend multiple levels"}),"\n",(0,n.jsxs)(s.p,{children:["Let's say that we want to turn our current ",(0,n.jsx)(s.code,{children:"avatar"})," part, into a component to support a more complex design with separate elements for the ",(0,n.jsx)(s.code,{children:"frame"})," and the ",(0,n.jsx)(s.code,{children:"image"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["To do this, we'll create a new ",(0,n.jsx)(s.code,{children:"avatar.st.css"})," stylesheet, import it to ",(0,n.jsx)(s.code,{children:"player.st.css"}),", and extend our ",(0,n.jsx)(s.code,{children:"avatar"})," class with it."]}),"\n","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="avatar.st.css"',children:".root {}\n.frame {}\n.image {}\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="player.st.css"',children:'@st-import Avatar from "./avatar.st.css";\n\n.root {\n  -st-states: registered, \n              ranking(enum(first, second, third));\n}\n.avatar {\n  -st-extends: Avatar;\n}\n.username {}\n'})}),"\n",(0,n.jsx)(s.p,{children:"By extending a stylesheet, which in turn has a part that extends a stylesheet, we can target inner parts through multiple levels with code completion and validations."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-css",metastring:'title="game.st.css"',children:'@st-import Player from "./player.st.css";\n\n.player {\n  -st-extends: Player;\n}\n\n/* all player instances have an avatar with a green frame*/\n.player::avatar::frame {\n  background: green;\n}\n\n/* the player in the first ranking, has an avatar with a golden frame */\n.player:ranking(first)::avatar::frame {\n  background: gold;\n}\n'})}),"\n","\n",(0,n.jsxs)(s.admonition,{title:"Catch breaking changes",type:"tip",children:[(0,n.jsxs)(s.p,{children:["Let's imagine a case, where the ",(0,n.jsx)(s.code,{children:"Avatar"})," component has undergone refactoring which changed the part name ",(0,n.jsx)(s.code,{children:"frame"})," to ",(0,n.jsx)(s.code,{children:"box"}),". If we were using native CSS, and were aware of this change, we could try and manually locate all instances of ",(0,n.jsx)(s.code,{children:"frame"})," and replace them with ",(0,n.jsx)(s.code,{children:"box"}),". But if we were to miss an instance, CSS would provide no indication of the problem."]}),(0,n.jsx)(s.p,{children:"Because we used Stylable to declare that a class extends a stylesheet, and then accessed its inner parts, we are assured that the interface exists and is valid, and if this interface were to change, an error would be reported at build-time and in the IDE."})]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.p,{children:"In this chapter we saw how once we extend a stylesheet, we can target inner parts and states using native-like syntax, while benefiting from language service features and diagnostics."}),"\n",(0,n.jsx)(s.p,{children:"Next we'll start talking about features that have to do with style templating, beginning with variables, both native custom properties, and Stylable's build-time variables."}),"\n",(0,n.jsx)(s.admonition,{title:"You've reached the end of the handbook, so far",type:"info",children:(0,n.jsxs)(s.p,{children:["This handbook is a work in progress and is not yet complete. You can track the plan and progress for it in ",(0,n.jsx)(s.a,{href:"https://github.com/wixplosives/stylable.io/issues/39",children:"this issue"})]})})]})}function p(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);