"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[7876],{6807:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=n(5893),r=n(1151);const o={id:"intro",title:"Intro"},a=void 0,i={id:"getting-started/intro",title:"Intro",description:"What is Stylable?",source:"@site/docs/getting-started/get-started.md",sourceDirName:"getting-started",slug:"/getting-started/intro",permalink:"/docs/getting-started/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/getting-started/get-started.md",tags:[],version:"current",frontMatter:{id:"intro",title:"Intro"},sidebar:"Discover",next:{title:"Boilerplate",permalink:"/docs/getting-started/boilerplate"}},l={},c=[{value:"What is Stylable?",id:"what-is-stylable",level:2},{value:"Where do I start?",id:"where-do-i-start",level:2},{value:"Want to learn more?",id:"want-to-learn-more",level:2}];function d(e){const t={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"what-is-stylable",children:"What is Stylable?"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Stylable"})," is a CSS preprocessor that enables you to write reusable, highly-performant, styled components. Each component exposes a style API that maps its internal parts so you can reuse components across teams without sacrificing stylability."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'Namespace styles to components so they don\'t "leak" and clash with other styles.'}),"\n",(0,s.jsx)(t.li,{children:"Enable custom pseudo-classes and pseudo-elements that abstract the internal structure of a component. These can then be styled externally."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["At build time, the preprocessor converts the ",(0,s.jsx)(t.strong,{children:"Stylable"})," CSS into flat, static, valid, vanilla CSS that works cross-browser."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Stylable"})," is agnostic to the component framework being used, it provides a way to write CSS that can be applied to any framework. All examples on the site use React-like syntax for demo purposes. However, the CSS written with ",(0,s.jsx)(t.strong,{children:"Stylable"})," can easily be used with any other frameworks such as Vue, Angular, or SolidJS."]}),"\n",(0,s.jsx)(t.h2,{id:"where-do-i-start",children:"Where do I start?"}),"\n",(0,s.jsxs)(t.p,{children:["There are currently two ways of starting working with ",(0,s.jsx)(t.strong,{children:"Stylable"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Quickly start a new project from a ",(0,s.jsx)(t.a,{href:"/docs/getting-started/boilerplate",children:"boilerplate"})]}),"\n",(0,s.jsxs)(t.li,{children:["Integrate into a new or existing project by ",(0,s.jsx)(t.a,{href:"/docs/getting-started/manual-integration",children:"manually configuring"})," ",(0,s.jsx)(t.strong,{children:"Stylable"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Optionally, you can install ",(0,s.jsx)(t.a,{href:"/docs/getting-started/tooling/stylable-intelligence",children:(0,s.jsx)(t.strong,{children:"Stylable Intelligence"})}),", an extension providing IDE support for code completion and diagnostics (currently supported only for Visual Studio Code)."]}),"\n",(0,s.jsx)(t.h2,{id:"want-to-learn-more",children:"Want to learn more?"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Read the handbook"})," - Take a tour through the features of Stylable, and see how to use them in the ",(0,s.jsx)(t.a,{href:"/docs/guides/handbook/intro",children:"handbook guides"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Explore the API docs"})," - Take a look at our ",(0,s.jsx)(t.a,{href:"/docs/references/cheatsheet",children:"specification reference documents"})," to get more acquainted with our code and to see specific code examples. Use the overview as a cheat sheet to help you keep track of ",(0,s.jsx)(t.strong,{children:"Stylable"})," syntax."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Play with Stylable Online"})," - Take Stylable for a spin and see how it works in the ",(0,s.jsx)(t.a,{href:"/playground",children:"Stylable Playground"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var s=n(7294);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);