"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[339],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2602:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(4137));const s={id:"type-selectors",title:"Type Selector"},a=void 0,l={unversionedId:"references/type-selectors",id:"references/type-selectors",title:"Type Selector",description:"A CSS type selector is used to target DOM elements according to their tag name.",source:"@site/docs/references/tag-selectors.md",sourceDirName:"references",slug:"/references/type-selectors",permalink:"/docs/references/type-selectors",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/tag-selectors.md",tags:[],version:"current",frontMatter:{id:"type-selectors",title:"Type Selector"},sidebar:"Specification Reference",previous:{title:"Pseudo-Element",permalink:"/docs/references/pseudo-elements"},next:{title:"url()",permalink:"/docs/references/using-external-assets"}},i={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Native element",id:"native-element",level:3},{value:"Component element",id:"component-element",level:3},{value:"Scoping",id:"scoping",level:2},{value:"Import and Export",id:"import-and-export",level:2},{value:"Runtime",id:"runtime",level:2},{value:"Namespace",id:"namespace",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A CSS ",(0,o.kt)("inlineCode",{parentName:"p"},"type selector")," is used to target DOM elements according to their tag name."),(0,o.kt)("p",null,"This page goes over how Stylable handles ",(0,o.kt)("inlineCode",{parentName:"p"},"type selector"),", for more details about the language feature itself, checkout ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors"},"MDN type selector"),"."),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("h3",{id:"native-element"},"Native element"),(0,o.kt)("p",null,"A native element behaves exactly as it does in CSS, and requires no special treatment in Stylable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* scoped under local class */\n.root div {} \n\n/* scoped to local class */\ndiv.root  {} \n")),(0,o.kt)("h3",{id:"component-element"},"Component element"),(0,o.kt)("p",null,"Use a ",(0,o.kt)("strong",{parentName:"p"},"capital first letter")," to refer to a ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/imports#default-import"},"default import")," of a stylesheet ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/root"},"root"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"@st-import Comp from './comp.st.css';\n\n/* style all Comp nested under root */\n.root Comp {}\n")),(0,o.kt)("h2",{id:"scoping"},"Scoping"),(0,o.kt)("p",null,"Stylable validates that a type selector is scoped to the stylesheet it is in. To target a type selector, compound it or scope it under a local class in order to avoid styling unrelated elements outside the scope of the stylesheet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"/* error - unscoped selector */\ndiv {}\n\n/* valid */\n.root div {}\ndiv.root {}\n")),(0,o.kt)("admonition",{title:"reuse scope",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Scope rules with the ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/st-scope"},(0,o.kt)("inlineCode",{parentName:"a"},"@st-scope"))," at-rule to minimize selector verbosity."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-css"},"@st-scope .root {\n  div {}\n}\n"))),(0,o.kt)("h2",{id:"import-and-export"},"Import and Export"),(0,o.kt)("p",null,"Component elements, with ",(0,o.kt)("strong",{parentName:"p"},"capital first letter"),", can be exported from a stylesheet ",(0,o.kt)("strong",{parentName:"p"},"if used")," in a selector. You can import them within the ",(0,o.kt)("inlineCode",{parentName:"p"},"@st-import")," ",(0,o.kt)("a",{parentName:"p",href:"/docs/references/imports#named-import"},"named import")," brackets."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="index.st.css"',title:'"index.st.css"'},"@st-import Button from './button.st.css';\n@st-import Menu from './menu.st.css';\n\n.root Button {}\n.root Menu {}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="theme.st.css"',title:'"theme.st.css"'},"@st-import [Button, Menu] from './index.st.css';\n\n@st-scope .root {\n  /* customize all buttons nested in theme root */\n  Button {}\n  /* customize all menus nested in theme root */\n  Menu {}\n}\n")),(0,o.kt)("h2",{id:"runtime"},"Runtime"),(0,o.kt)("p",null,"Elements are not available on the Stylable stylesheet runtime."),(0,o.kt)("h2",{id:"namespace"},"Namespace"),(0,o.kt)("p",null,"Native elements are not namespaced. However, if an element originates from a class, like a component element default import, then it is transformed during build."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="entry.st.css"',title:'"entry.st.css"'},"@st-import Button from './button.st.css';\n\n.root Button {}\n.root div {}\n\n/* OUTPUT */\n.entry__root .button__root {}\n.entry__root div {}\n")))}u.isMDXComponent=!0}}]);