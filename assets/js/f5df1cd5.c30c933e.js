"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[741],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=m(t),u=r,d=f["".concat(l,".").concat(u)]||f[u]||c[u]||s;return t?a.createElement(d,o(o({ref:n},p),{},{components:t})):a.createElement(d,o({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<s;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6402:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return p},default:function(){return f}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),o=["components"],i={id:"keyframes",title:"Keyframes"},l=void 0,m={unversionedId:"references/keyframes",id:"references/keyframes",isDocsHomePage:!1,title:"Keyframes",description:"In CSS, @keyframes exhibit a behavior similar to classes where all names are global and can potentially clash in the DOM.",source:"@site/docs/references/keyframes.md",sourceDirName:"references",slug:"/references/keyframes",permalink:"/docs/references/keyframes",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/keyframes.md",version:"current",frontMatter:{id:"keyframes",title:"Keyframes"},sidebar:"Specification Reference",previous:{title:"Using External Assets",permalink:"/docs/references/using-external-assets"}},p=[{value:"Example",id:"example",children:[]},{value:"Imports and Exports",id:"imports-and-exports",children:[{value:"Example",id:"example-1",children:[]},{value:"Keyframes aliasing",id:"keyframes-aliasing",children:[]}]},{value:"Runtime mapping",id:"runtime-mapping",children:[{value:"Example",id:"example-2",children:[]}]}],c={toc:p};function f(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In CSS, ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes"},(0,s.kt)("inlineCode",{parentName:"a"},"@keyframes"))," exhibit a behavior similar to classes where all names are global and can potentially clash in the DOM."),(0,s.kt)("p",null,"To avoid this issue, ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," performs automatic namespacing of keyframes based on the stylesheet in which they were created."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "Comp";\n\n@keyframes slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n.root { \n    animation-name: slide; \n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n\n@keyframes Comp__slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n.Comp__root { \n    animation-name: Comp__slide;\n}\n")),(0,s.kt)("h2",{id:"imports-and-exports"},"Imports and Exports"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Stylable")," automatically exports all keyframes created within a stylesheet. ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," will also re-export any imported keyframes."),(0,s.kt)("p",null,"To import any such symbol in a different stylesheet, ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," uses a utility function, ",(0,s.kt)("inlineCode",{parentName:"p"},"keyframes([NAME1, NAME2, ...])")," to specifically target keyframes imports."),(0,s.kt)("h3",{id:"example-1"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'/* index.st.css */\n\n:import {\n    -st-from: "./animations.st.css";\n    -st-named: keyframes(slideX, slideY);\n}\n\n.root { animation-name: slideX; }\n\n.part { animation-name: slideY; }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},"/* animations.st.css */\n\n@keyframes slideX {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n\n@keyframes slideY {\n  from { transform: translateY(0%); }\n  to { transform: translateY(100%); }\n}\n")),(0,s.kt)("h3",{id:"keyframes-aliasing"},"Keyframes aliasing"),(0,s.kt)("p",null,"To create a local alias of a keyframe, Stylable supports the same ",(0,s.kt)("inlineCode",{parentName:"p"},"[NAME] as [NEW_NAME]")," syntax inside the keyframe import utility, as it does for any named import."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},':import {\n    -st-from: "./animations.st.css";\n    -st-named: keyframes(slide as mySlide),\n               somePart as myPart;\n}\n')),(0,s.kt)("p",null,"Note that this keyframe will be re-exported under its new alias name, and not the original imported name."),(0,s.kt)("h2",{id:"runtime-mapping"},"Runtime mapping"),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"Stylable")," runtime stylesheet exposes the ",(0,s.kt)("inlineCode",{parentName:"p"},"keyframes")," key which contains a mapping of source keyframe names to their namespaced target name.\nYou can use these keyframes to apply animations via inline styling."),(0,s.kt)("h3",{id:"example-2"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},'@namespace "Comp";\n\n@keyframes slide {\n  from { transform: translateX(0%); }\n  to { transform: translateX(100%); }\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"import { classes, keyframes } from './entry.st.css';\n\n<div className={classes.root}\n     style={{ animationName: keyframes.slide }} >\n</div>\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'/* DOM output */\n\n<div className="Comp__root"\n     style="animation-name: Comp__slide;" >\n</div>\n')))}f.isMDXComponent=!0}}]);