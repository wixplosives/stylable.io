"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[954],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(b,l(l({ref:t},p),{},{components:n})):o.createElement(b,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4909:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),l=["components"],i={id:"stylable-application",title:"Build a Stylable Application",sidebar_label:"Stylable Application"},s=void 0,c={unversionedId:"guides/stylable-application",id:"guides/stylable-application",isDocsHomePage:!1,title:"Build a Stylable Application",description:"When building a Stylable application, you want to share definitions between parts of the application and consume 3rd party Stylable component libraries.",source:"@site/docs/guides/stylable-application.md",sourceDirName:"guides",slug:"/guides/stylable-application",permalink:"/docs/guides/stylable-application",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/guides/stylable-application.md",tags:[],version:"current",frontMatter:{id:"stylable-application",title:"Build a Stylable Application",sidebar_label:"Stylable Application"},sidebar:"Guides",previous:{title:"Runtime",permalink:"/docs/guides/runtime"},next:{title:"Stylable Component Library",permalink:"/docs/guides/stylable-component-library"}},p=[{value:"The <code>project.st.css</code> file",id:"the-projectstcss-file",children:[],level:2},{value:"Stylable component",id:"stylable-component",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When building a ",(0,r.kt)("strong",{parentName:"p"},"Stylable")," application, you want to share definitions between parts of the application and consume 3rd party ",(0,r.kt)("strong",{parentName:"p"},"Stylable")," component libraries. "),(0,r.kt)("h2",{id:"the-projectstcss-file"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"project.st.css")," file"),(0,r.kt)("p",null,"It is recommended to have a ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/project-commons"},"project commons stylesheet")," that includes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Shared common CSS definitions between parts of the project:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/references/st-variables"},"variables")," - values to reuse in declarations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/guides/shared-classes"},"shared classes")," - classes that can be reused in components"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/guides/component-variants"},"component variants")," - semantic component classes")))),(0,r.kt)("p",null,"An application would define CSS with the final style definitions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* project.st.css */\n@namespace \"project\";\n:vars {\n    color1: white;\n    color2: red;\n    fontBig: 30px;\n    fontSmall: 10px;\n}\n:import {\n    -st-from: './button/button.st.css';\n    -st-default: Button;\n}\n.cancelButton {\n    -st-extends: Button;\n    color: value(color1);\n    background: value(color2);\n}\n")),(0,r.kt)("h2",{id:"stylable-component"},"Stylable component"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/component-best-practices"},"Stylable component best practices guide"),' describes ways to design a good component that can be styled. However, when building your application, it is also common to define components with their final CSS. This makes them less "themable", but is much simpler.'),(0,r.kt)("p",null,"In the following code you can see a component that is described with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"2 colors used from project"),(0,r.kt)("li",{parentName:"ul"},"1 component variant")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"@namespace \"dialog\";\n:import {\n    -st-from: './project.st.css';\n    -st-named: color1, color2, cancelButton;\n}\n:import {\n    -st-from: './button/button.st.css';\n    -st-default: Button;\n}\n.root {\n    color: value(color1);\n    background: value(color2);\n}\n.ok {\n    -st-extends: Button;\n}\n.cancel {\n    -st-extends: cancelButton;\n}\n")))}d.isMDXComponent=!0}}]);