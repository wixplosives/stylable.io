"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[8829],{2135:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"references/pseudo-elements","title":"Pseudo-Element","description":"In addition to CSS\'s native pseudo-elements, like ::backdrop, Stylable allow you to define custom pseudo-elements so that you can target and apply styles to inner parts of your components.","source":"@site/docs/references/pseudo-elements.md","sourceDirName":"references","slug":"/references/pseudo-elements","permalink":"/docs/references/pseudo-elements","draft":false,"unlisted":false,"editUrl":"https://github.com/wixplosives/stylable.io/edit/master/docs/references/pseudo-elements.md","tags":[],"version":"current","frontMatter":{"id":"pseudo-elements","title":"Pseudo-Element"},"sidebar":"Specification Reference","previous":{"title":"Pseudo-Class","permalink":"/docs/references/pseudo-classes"},"next":{"title":"Type Selector","permalink":"/docs/references/type-selectors"}}');var o=t(4848),r=t(8453);const a={id:"pseudo-elements",title:"Pseudo-Element"},l=void 0,i={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Style a component",id:"style-a-component",level:2},{value:"Style a variant",id:"style-a-variant",level:2},{value:"Define",id:"define",level:2},{value:"Element inheritance",id:"element-inheritance",level:3},{value:"Build transformation",id:"build-transformation",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["In addition to CSS's native pseudo-elements, like ",(0,o.jsx)(n.code,{children:"::before"})," and ",(0,o.jsx)(n.code,{children:"::backdrop"}),", Stylable allow you to define custom pseudo-elements so that you can target and apply styles to inner parts of your components."]}),"\n",(0,o.jsx)(n.p,{children:"This page goes over how Stylable handles custom pseudo-elements, for more details about the language feature itself, checkout the following resources:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements",children:"MDN pseudo-element"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.w3.org/TR/CSS22/selector.html#pseudo-element-selectors",children:"pseudo-element in spec"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsxs)(n.p,{children:["To target an internal element, Use the pseudo-element prefix ",(0,o.jsx)(n.code,{children:"::"})," with the part name."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"Component::firstlevel::secondlevel {}\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"deep pseudo-elements",type:"info",children:(0,o.jsxs)(n.p,{children:["Custom pseudo-elements are not limited to the end of a selector like native pseudo-elements, and can be chained. For example, you can access the label of a navigation button from a gallery: ",(0,o.jsx)(n.code,{children:"Gallery::navBtn::label"})]})}),"\n",(0,o.jsx)(n.h2,{id:"style-a-component",children:"Style a component"}),"\n",(0,o.jsxs)(n.p,{children:["Customizing ",(0,o.jsx)(n.strong,{children:"all component instances"})," nested under a stylesheet using the imported ",(0,o.jsx)(n.a,{href:"/docs/references/type-selectors#component-element",children:"component type selector"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"@st-import Comp from './comp.st.css';\n\n/* target Comp internal part */\n.root Comp::part {/* customize */}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"style-a-variant",children:"Style a variant"}),"\n",(0,o.jsxs)(n.p,{children:["Customizing a variant class of a component by ",(0,o.jsx)(n.a,{href:"/docs/references/extend-stylesheet",children:"extending"})," a class with the component stylesheet."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:'title="page.st.css"',children:"@st-import Comp from './comp.st.css';\n\n.compVariant {\n  /* set compVariant to inherit from Comp */\n  -st-extends: Comp;\n}\n/* target compVariant internal part (inherited from Comp) */\n.compVariant::part {/* customize */}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then set the variant class to the component instance."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:'title="page.jsx"',children:"import Comp from './comp';\nimport { classes } from './page.st.css';\n\nconst Page = () => {\n  return (\n    <div>\n      /* customize Comp with compVariant class */\n      <Comp class={classes.compVariant}>\n    </div>\n  );\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"define",children:"Define"}),"\n",(0,o.jsxs)(n.p,{children:["Any ",(0,o.jsx)(n.a,{href:"/docs/references/class-selectors",children:"CSS class"})," that is exported from a stylesheet is accessible as a pseudo-element."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:'title="comp.st.css"',children:"/* available as ::part for this stylesheet */\n.part {} \n"})}),"\n",(0,o.jsxs)(n.p,{children:["Additionally a ",(0,o.jsx)(n.a,{href:"/docs/references/custom-selectors",children:"custom-selector"})," defined within a stylesheet is exposed as a custom pseudo-element and will take precedence over a class with the same name."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:'title="comp.st.css"',children:"/* available as ::part for this stylesheet\n   and preserves the direct child combinator\n   when used */\n@custom-selector :--part .root > .part; \n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Native pseudo-element override",type:"caution",children:(0,o.jsxs)(n.p,{children:["Override of native pseudo-elements is possible, however it is ",(0,o.jsx)(n.strong,{children:"strongly discouraged"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"element-inheritance",children:"Element inheritance"}),"\n",(0,o.jsxs)(n.p,{children:["An extending ",(0,o.jsx)(n.a,{href:"/docs/references/root",children:"stylesheet root"})," automatically inherits any pseudo-elements from the extended definition, and can then override them by defining its own public parts."]}),"\n",(0,o.jsx)(n.h2,{id:"build-transformation",children:"Build transformation"}),"\n",(0,o.jsx)(n.p,{children:"Custom pseudo-elements are transformed in build-time to target the internal selector they represent."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:'title="comp.st.css"',children:".part {}\n@custom-selector :--directPart .root > .part; \n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:'title="page.st.css"',children:"@st-import Comp from './comp.st.css';\n\n.root {\n  -st-extends: Comp;\n}\n\n.root::part {}\n.root::directPart {}\n\n/* OUTPUT */\n.page__root .comp__part {}\n.page__root > .comp__part {}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);