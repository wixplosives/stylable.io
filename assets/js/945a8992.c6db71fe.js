"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[3455],{1917:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var s=n(5893),r=n(1151);const t={id:"st-variables",title:"Variables"},l=void 0,i={id:"references/st-variables",title:"Variables",description:"Stylable variables provide a way to define common values to be used across the stylesheet and exposed for sharing and theming.",source:"@site/docs/references/variables.md",sourceDirName:"references",slug:"/references/st-variables",permalink:"/docs/references/st-variables",draft:!1,unlisted:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/variables.md",tags:[],version:"current",frontMatter:{id:"st-variables",title:"Variables"},sidebar:"Specification Reference",previous:{title:"Mixins",permalink:"/docs/references/mixins"},next:{title:"Runtime",permalink:"/docs/references/runtime"}},o={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Define",id:"define",level:3},{value:"Evaluate",id:"evaluate",level:3},{value:"Compose",id:"compose",level:3},{value:"Array",id:"array",level:3},{value:"Map",id:"map",level:3},{value:"Import and Export",id:"import-and-export",level:2},{value:"Runtime",id:"runtime",level:2},{value:"Custom variable",id:"custom-variable",level:2}];function d(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Stylable variables provide a way to define common values to be used across the stylesheet and exposed for sharing and theming.\nThese variables are used only during build-time and have no runtime impact."}),"\n",(0,s.jsxs)(a.p,{children:["If you wish to use native dynamic variables, that can change value during runtime, see ",(0,s.jsx)(a.a,{href:"/docs/references/css-vars",children:"css custom properties"})," for further details."]}),"\n",(0,s.jsx)(a.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsxs)(a.p,{children:["Use the ",(0,s.jsx)(a.code,{children:":vars"})," top level rule to define build variables."]}),"\n",(0,s.jsx)(a.h3,{id:"define",children:"Define"}),"\n",(0,s.jsxs)(a.p,{children:["To define a variable, add a variable declaration within a ",(0,s.jsx)(a.code,{children:":vars"})," ruleset."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",children:":vars {\n  /* define x with value green */\n  x: green;\n\n  /* define y with value blue */\n  y: blue;\n}\n"})}),"\n",(0,s.jsx)(a.h3,{id:"evaluate",children:"Evaluate"}),"\n",(0,s.jsxs)(a.p,{children:["To get a variable value, use the ",(0,s.jsx)(a.code,{children:"value()"})," function with the variable name as the first argument."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",children:".a {\n  /* evaluate in declaration value */\n  color: value(x);\n\n  /* compose in declaration value */\n  background: url(a.jpg) no-repeat, url(b.jpg) repeat-x value(x);\n}\n\n/* set media params from a variable */\n@media value(y) {}\n"})}),"\n",(0,s.jsx)(a.h3,{id:"compose",children:"Compose"}),"\n",(0,s.jsx)(a.p,{children:"Variables can be composed into a declaration value."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",children:":vars {\n  x: green;\n\n  /* define y with the value green from x */\n  y: value(x);\n\n  /* define z with composed x value */\n  z: red, value(x), blue;\n}\n"})}),"\n",(0,s.jsx)(a.h3,{id:"array",children:"Array"}),"\n",(0,s.jsxs)(a.p,{children:["Use ",(0,s.jsx)(a.code,{children:"st-array"})," to define a variable that holds a list of comma separated values that can be accessed by a zero-based index as the second argument to the ",(0,s.jsx)(a.code,{children:"value()"})," function."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",children:":vars {\n  /* comma separated list */\n  colors: st-array(red, green, blue);\n}\n\n.a {\n  /* access 2nd cell value */\n  color: value(colors, 1); /* green */\n}\n"})}),"\n",(0,s.jsx)(a.h3,{id:"map",children:"Map"}),"\n",(0,s.jsxs)(a.p,{children:["Use ",(0,s.jsx)(a.code,{children:"st-map"})," to define a variable that holds key/value pairs with a space as a delimiter between them, and a comma separating each pair."]}),"\n",(0,s.jsxs)(a.p,{children:["These values can then be accessed by providing the key as the second argument to the ",(0,s.jsx)(a.code,{children:"value()"})," function."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",children:":vars {\n  /* comma separated key/value pairs */\n  colors: st-map(\n    bg   black, \n    text gold,\n  );\n}\n\n.a {\n  /* access 'text' key value */\n  color: value(colors, text); /* gold */\n}\n"})}),"\n",(0,s.jsx)(a.h2,{id:"import-and-export",children:"Import and Export"}),"\n",(0,s.jsxs)(a.p,{children:["An exported build variable can be imported into another stylesheet with the ",(0,s.jsx)(a.a,{href:"./imports",children:"@st-import"})," at-rule."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",metastring:'title="example2.st.css"',children:'@st-import [color1] from "./common.st.css";\n\n.a {\n  /* compose color1 to border value*/\n  border: 10px solid value(color1);\n}\n'})}),"\n",(0,s.jsx)(a.h2,{id:"runtime",children:"Runtime"}),"\n",(0,s.jsxs)(a.p,{children:["A build variable value can be accessed using the ",(0,s.jsx)(a.code,{children:"stVars"})," mapping on the Stylable stylesheet runtime."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-jsx",children:"import { stVars } from './common.st.css';\n\n// map from local name to value\nstVars.color1;         // \"green\"\nstVars['dashed-name']; // \"blue\"\n"})}),"\n",(0,s.jsx)(a.admonition,{title:"local export only",type:"important",children:(0,s.jsxs)(a.p,{children:["Only build variables that are defined by the stylesheet are exported to Javascript - ",(0,s.jsx)(a.strong,{children:"imported ones are not!"})]})}),"\n",(0,s.jsx)(a.h2,{id:"custom-variable",children:"Custom variable"}),"\n",(0,s.jsx)(a.admonition,{title:"experimental",type:"danger",children:(0,s.jsx)(a.p,{children:"This API is not stable"})}),"\n",(0,s.jsxs)(a.p,{children:["Composed data structures like ",(0,s.jsx)(a.code,{children:"st-array"})," and ",(0,s.jsx)(a.code,{children:"st-map"})," can be defined from Javascript. Take a look at ",(0,s.jsx)(a.code,{children:"stBorder"})," from the ",(0,s.jsx)(a.a,{href:"https://github.com/wix/stylable/tree/master/packages/custom-value",children:"@stylable/custom-value"})," to see how it works."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-css",metastring:'title="stBorder usage example"',children:'@st-import [stBorder] from "@stylable/custom-value";\n\n:vars {\n  /* order of arguments: size style color */\n  myborder: stBorder(1px, solid, green);\n}\n\n.root {\n  border: value(myBorder); /* 1px solid green */\n  background-color: value(myBorder, color); /* green */\n}\n'})})]})}function u(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>i,a:()=>l});var s=n(7294);const r={},t=s.createContext(r);function l(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);