"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[6085],{7864:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=t(5893),n=t(1151);const a={id:"imports",title:"Import"},i=void 0,o={id:"references/imports",title:"Import",description:"The Stylable @st-import at-rule is used to reference definitions from other .st.css or .js modules in a similar way to JavaScript Imports.",source:"@site/docs/references/imports.md",sourceDirName:"references",slug:"/references/imports",permalink:"/docs/references/imports",draft:!1,unlisted:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/imports.md",tags:[],version:"current",frontMatter:{id:"imports",title:"Import"},sidebar:"Specification Reference",previous:{title:"Global Selector",permalink:"/docs/references/global-selectors"},next:{title:"Namespace",permalink:"/docs/references/namespace"}},l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Default import",id:"default-import",level:3},{value:"Named import",id:"named-import",level:3},{value:"Local alias",id:"local-alias",level:4},{value:"Stylable stylesheet",id:"stylable-stylesheet",level:2},{value:"Named type assertion",id:"named-type-assertion",level:3},{value:"Javascript",id:"javascript",level:2},{value:"Legacy syntax",id:"legacy-syntax",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The Stylable ",(0,r.jsx)(s.code,{children:"@st-import"})," at-rule is used to reference definitions from other ",(0,r.jsx)(s.code,{children:".st.css"})," or ",(0,r.jsx)(s.code,{children:".js"})," modules in a similar way to ",(0,r.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",children:"JavaScript Imports"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"@st-import Default, [namedA, namedB as localB] from 'request';\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"re-declare symbol",type:"info",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"import local names must be unique."}),"\n",(0,r.jsx)(s.li,{children:"Imports are hoisted above local definitions."}),"\n"]})}),"\n",(0,r.jsx)(s.h3,{id:"default-import",children:"Default import"}),"\n",(0,r.jsxs)(s.p,{children:["In order to reference the the default export of a module, provide a local name after the ",(0,r.jsx)(s.code,{children:"@st-import"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"@st-import DefaultLocalName from 'request';\n"})}),"\n",(0,r.jsx)(s.h3,{id:"named-import",children:"Named import"}),"\n",(0,r.jsx)(s.p,{children:"To reference named exports of a module, in square brackets (after the optional default import), provide a comma separated list of requested names."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"/* named imports */\n@st-import [partA, partB] from 'request';\n\n/* default + named imports */\n@st-import Default, [partA, partB] from 'request';\n"})}),"\n",(0,r.jsx)(s.h4,{id:"local-alias",children:"Local alias"}),"\n",(0,r.jsxs)(s.p,{children:["Use the ",(0,r.jsx)(s.code,{children:"as"})," keyword to map an export name to a local name."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"@st-import [part as localPartName] from 'request';\n"})}),"\n",(0,r.jsx)(s.h2,{id:"stylable-stylesheet",children:"Stylable stylesheet"}),"\n",(0,r.jsxs)(s.p,{children:["When importing from a stylesheet, the ",(0,r.jsx)(s.a,{href:"/docs/references/root#default-export",children:"root"})," class is mapped to the default export, and several named symbols can be referenced by name:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",metastring:'title="origin.st.css"',children:"/* define symbols */\n.part {\n  --customProp: yellow;\n  container-name: part;\n}\n@keyframes anim {}\n@layer comps, theme;\n:vars {\n  stVar: green;\n}\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",metastring:'title="entry.st.css"',children:"@st-import OriginRoot, [\n  part,         /* part class name */\n  --customProp, /* custom property */\n  stVar         /* build var */\n] from './origin.st.css';\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"Stylesheet default capitalization",type:"caution",children:(0,r.jsxs)(s.p,{children:["When importing a ",(0,r.jsx)(s.strong,{children:"default"})," value from a stylable stylesheet, you should use a capital letter to signify that the value represents a component root."]})}),"\n",(0,r.jsx)(s.h3,{id:"named-type-assertion",children:"Named type assertion"}),"\n",(0,r.jsxs)(s.p,{children:["To import keyframes, layers or containers from another stylesheet, a special ",(0,r.jsx)(s.a,{href:"/docs/references/keyframes#import-and-export",children:"keyframes()"}),", ",(0,r.jsx)(s.a,{href:"./layer#import-and-export",children:"layer()"}),", or ",(0,r.jsx)(s.a,{href:"./contains#import-and-export",children:"container()"})," assertion is required."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",metastring:'title="entry.st.css"',children:"/* import keyframe and layer */\n@st-import [\n  keyframes(anim),\n  layer(theme),\n  container(panel)\n] from './origin.st.css';\n\n/* multiple */\n@st-import [\n  keyframes(anim1, anim2), \n  layer(comps, theme),\n  container(panel, header)\n] from './origin.st.css';\n"})}),"\n",(0,r.jsx)(s.h2,{id:"javascript",children:"Javascript"}),"\n",(0,r.jsxs)(s.p,{children:["To import Javascript definitions for ",(0,r.jsx)(s.a,{href:"/docs/references/st-variables",children:"values"}),", ",(0,r.jsx)(s.a,{href:"/docs/references/mixins",children:"mixins"}),", and ",(0,r.jsx)(s.a,{href:"/docs/references/formatters",children:"formatters"}),", use the ",(0,r.jsx)(s.code,{children:"@st-import"})," statement in the same way as you would for a stylesheet."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"@st-import DefaultExport, [namedA, namedB as localB] from './code.js';\n"})}),"\n",(0,r.jsx)(s.h2,{id:"legacy-syntax",children:"Legacy syntax"}),"\n",(0,r.jsxs)(s.p,{children:["An older variation for ",(0,r.jsx)(s.code,{children:"@st-import"})," is the ",(0,r.jsx)(s.code,{children:":import"})," (pseudo-import). While it still works, it is ",(0,r.jsx)(s.strong,{children:"highly discouraged"})," for usage, verbose and will be deprecated in the future."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:":import {\n  -st-from: 'request';\n  -st-default: DefaultLocalName;\n  -st-named: namedA, namedB as localB;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["A code-mod to migrate to the new syntax is available (",(0,r.jsx)(s.a,{href:"https://github.com/wix/stylable/tree/master/packages/cli#builtin-codemods",children:"see doc"}),")"]})]})}function m(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>i});var r=t(7294);const n={},a=r.createContext(n);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);