"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[2919],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1796:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={id:"typescript-integration",title:"TypeScript"},o=void 0,s={unversionedId:"getting-started/typescript-integration",id:"getting-started/typescript-integration",title:"TypeScript",description:"Stylable requires .st.css stylesheets to be imported into your .ts/*.tsx files for class names, states, variables, or keyframes to be applied to your components.",source:"@site/docs/getting-started/typescript-integration.md",sourceDirName:"getting-started",slug:"/getting-started/typescript-integration",permalink:"/docs/getting-started/typescript-integration",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/getting-started/typescript-integration.md",tags:[],version:"current",frontMatter:{id:"typescript-integration",title:"TypeScript"},sidebar:"Discover",previous:{title:"Storybook",permalink:"/docs/getting-started/storybook-integration"},next:{title:"Webpack",permalink:"/docs/getting-started/webpack-integration"}},l={},p=[{value:"Publishing",id:"publishing",level:2},{value:"Manually generating stylesheet definition files",id:"manually-generating-stylesheet-definition-files",level:2},{value:"Import third-party stylesheets that do not provide <code>.d.ts</code> files",id:"import-third-party-stylesheets-that-do-not-provide-dts-files",level:3},{value:"Generating source-maps",id:"generating-source-maps",level:3},{value:"Development mode",id:"development-mode",level:3},{value:"ESlint Stylable plugin vs. generated definition files",id:"eslint-stylable-plugin-vs-generated-definition-files",level:3},{value:"Declaring global stylesheet typings",id:"declaring-global-stylesheet-typings",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Stylable requires ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css")," stylesheets to be imported into your ",(0,i.kt)("inlineCode",{parentName:"p"},"*.ts/*.tsx")," files for class names, states, variables, or keyframes to be applied to your components."),(0,i.kt)("p",null,"By default, TypeScript has no way of knowing what\u2019s inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css")," file, so you must define a type for it.\nTo help ease this requirement, Stylable can generate a declaration file for each stylesheet. These files are generated using our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wix/stylable/tree/master/packages/cli"},(0,i.kt)("inlineCode",{parentName:"a"},"@stylable/cli"))," or by using it through one of our integrations."),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"create-stylable-app")," will generate the ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files when running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm start\n")),(0,i.kt)("p",null,"or when building the project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm run build\n")),(0,i.kt)("hr",null),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"All of the examples below are showing the flow of running our ",(0,i.kt)("inlineCode",{parentName:"p"},"stc")," CLI.\nAlternatively, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"stylable.config.js")," file to have it generated for you. See further information ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wix/stylable/tree/master/packages/cli#configuration-file"},"here"),".")),(0,i.kt)("h2",{id:"publishing"},"Publishing"),(0,i.kt)("p",null,"If you publish any ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css")," files in your package, you should also publish the ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts.map")," files alongside them. This practice leads to a better experience for users consuming your project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'stc --outDir="dist" --stcss --dts --dtsSourceMap\n')),(0,i.kt)("h2",{id:"manually-generating-stylesheet-definition-files"},"Manually generating stylesheet definition files"),(0,i.kt)("p",null,"Stylable provides the ability to generate type definition files (",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts"),") for any stylesheet. These serve as static typings for each export that the ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/runtime"},"stylesheet runtime")," provides."),(0,i.kt)("p",null,"Generate a ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," next to all ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css")," files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"stc --dts\n")),(0,i.kt)("p",null,"Alternatively, you can generate the ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files to a custom folder, for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"st-types"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'stc --srcDir="src" --outDir="st-types" --dts\n')),(0,i.kt)("p",null,"Then modify your ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," to specify two ",(0,i.kt)("inlineCode",{parentName:"p"},"rootDirs"),", your source files, and the generated typings (learn more about this by reading the ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#rootDirs"},(0,i.kt)("inlineCode",{parentName:"a"},"tsconfig.json")," documentation"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n  "compilerOptions": {\n    "rootDirs": ["./src", "./st-types"]\n  }\n}\n')),(0,i.kt)("h3",{id:"import-third-party-stylesheets-that-do-not-provide-dts-files"},"Import third-party stylesheets that do not provide ",(0,i.kt)("inlineCode",{parentName:"h3"},".d.ts")," files"),(0,i.kt)("p",null,"You will have to ",(0,i.kt)("a",{parentName:"p",href:"#declaring-global-stylesheet-typings"},"declare global typings"),", but to keep it type safe you should update the request to match the module's stylesheets only."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* globals.d.ts: */\ndeclare module 'third-party-package/*.st.css' {\n  export * from '@stylable/runtime/stylesheet';\n\n  const defaultExport: unknown;\n  export default defaultExport;\n}\n")),(0,i.kt)("h3",{id:"generating-source-maps"},"Generating source-maps"),(0,i.kt)("p",null,"In addition to generating ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files, you can also generate source-maps (",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts.map"),")."),(0,i.kt)("p",null,"These source-maps will map the content of the ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," file back to the source stylesheet (",(0,i.kt)("inlineCode",{parentName:"p"},".st.css"),") so that you can jump to definitions in your stylesheets straight from your TypeScript files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"stc --dts --dtsSourceMap\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Source maps are generated by default when generating ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files. If these are not wanted, the ",(0,i.kt)("inlineCode",{parentName:"p"},"--dtsSourceMap")," flag should be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,i.kt)("h3",{id:"development-mode"},"Development mode"),(0,i.kt)("p",null,"To have a good experience when working locally in dev mode, we recommend generating both the definition files and their source-maps using our ",(0,i.kt)("inlineCode",{parentName:"p"},"watch")," service."),(0,i.kt)("p",null,"This ensures that as you are working your code, validations, completions and other language-service capabilities will remain up-to-date."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"stc --dts --dtsSourceMap -w\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Generating both definition and source-map files for every stylesheet in a project can clutter the project up. For this reason, we recommend adding the generated ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css.d.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css.d.ts.map")," files to your ",(0,i.kt)("inlineCode",{parentName:"p"},".gitignore")," file, and only include them in your published packages.")),(0,i.kt)("h3",{id:"eslint-stylable-plugin-vs-generated-definition-files"},"ESlint Stylable plugin vs. generated definition files"),(0,i.kt)("p",null,"There is an overlap of functionality between the Stylable ESlint plugin and the generated ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," files - both solutions validate stylesheet export usages. The ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," file approach is superior, howevever, as it offers better validations, completions and correctness. All it requires is that the ",(0,i.kt)("inlineCode",{parentName:"p"},"watch")," service be running."),(0,i.kt)("p",null,"In conclusion, if you are generating definition files, you can remove the ESlint Stylable plugin and suffer no degredation in development experience."),(0,i.kt)("h2",{id:"declaring-global-stylesheet-typings"},"Declaring global stylesheet typings"),(0,i.kt)("p",null,"If you choose not to generate ",(0,i.kt)("inlineCode",{parentName:"p"},".d.ts")," typings for each stylesheet, then it is required that you include in your project a general purpose ",(0,i.kt)("inlineCode",{parentName:"p"},"*.st.css")," global declaration. This provides a broad signature of a Stylable stylesheet."),(0,i.kt)("p",null,"To do this, create a ",(0,i.kt)("inlineCode",{parentName:"p"},"globals.d.ts")," file in your ",(0,i.kt)("inlineCode",{parentName:"p"},"./src")," directory and add the following declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"/* globals.d.ts: */\ndeclare module '*.st.css' {\n  export * from '@stylable/runtime/stylesheet';\n\n  const defaultExport: unknown;\n  export default defaultExport;\n}\n")))}c.isMDXComponent=!0}}]);