"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"Discover":[{"type":"link","label":"Intro","href":"/docs/getting-started/intro","docId":"getting-started/intro"},{"type":"link","label":"Installation","href":"/docs/getting-started/install-configure","docId":"getting-started/install-configure"},{"type":"link","label":"React Integration","href":"/docs/getting-started/react-integration","docId":"getting-started/react-integration"},{"type":"link","label":"TypeScript Integration","href":"/docs/getting-started/typescript-integration","docId":"getting-started/typescript-integration"},{"type":"link","label":"Storybook Integration","href":"/docs/getting-started/storybook-integration","docId":"getting-started/storybook-integration"},{"type":"link","label":"NextJS Integration","href":"/docs/getting-started/nextjs-integration","docId":"getting-started/nextjs-integration"},{"type":"link","label":"Stylable Intelligence","href":"/docs/getting-started/stylable-intelligence","docId":"getting-started/stylable-intelligence"}],"Guides":[{"type":"link","label":"Component Basics","href":"/docs/guides/components-basics","docId":"guides/components-basics"},{"type":"link","label":"Component Best Practices","href":"/docs/guides/component-best-practices","docId":"guides/component-best-practices"},{"type":"link","label":"Runtime","href":"/docs/guides/runtime","docId":"guides/runtime"},{"type":"link","label":"Stylable Application","href":"/docs/guides/stylable-application","docId":"guides/stylable-application"},{"type":"link","label":"Stylable Component Library","href":"/docs/guides/stylable-component-library","docId":"guides/stylable-component-library"},{"type":"link","label":"Project Commons","href":"/docs/guides/project-commons","docId":"guides/project-commons"},{"type":"link","label":"Shared Classes","href":"/docs/guides/shared-classes","docId":"guides/shared-classes"},{"type":"link","label":"Component Variants","href":"/docs/guides/component-variants","docId":"guides/component-variants"},{"type":"link","label":"Server Side Rendering","href":"/docs/guides/ssr","docId":"guides/ssr"},{"type":"link","label":"Migrating to Stylable v3","href":"/docs/guides/migration-v3","docId":"guides/migration-v3"},{"type":"link","label":"Migrating to Stylable v5","href":"/docs/guides/migration-v5","docId":"guides/migration-v5"}],"Specification Reference":[{"type":"link","label":"Specification Overview","href":"/docs/references/cheatsheet","docId":"references/cheatsheet"},{"type":"link","label":"Imports","href":"/docs/references/imports","docId":"references/imports"},{"type":"link","label":"Root","href":"/docs/references/root","docId":"references/root"},{"type":"link","label":"Class Selectors","href":"/docs/references/class-selectors","docId":"references/class-selectors"},{"type":"link","label":"Tag/Component Selector","href":"/docs/references/tag-selectors","docId":"references/tag-selectors"},{"type":"link","label":"Extend Stylable Stylesheet","href":"/docs/references/extend-stylesheet","docId":"references/extend-stylesheet"},{"type":"link","label":"Pseudo-Classes","href":"/docs/references/pseudo-classes","docId":"references/pseudo-classes"},{"type":"link","label":"Pseudo-Classes Parameters","href":"/docs/references/state-parameter-types","docId":"references/state-parameter-types"},{"type":"link","label":"Pseudo-Elements","href":"/docs/references/pseudo-elements","docId":"references/pseudo-elements"},{"type":"link","label":"Global Selectors","href":"/docs/references/global-selectors","docId":"references/global-selectors"},{"type":"link","label":"Custom Selectors","href":"/docs/references/custom-selectors","docId":"references/custom-selectors"},{"type":"link","label":"Mixins","href":"/docs/references/mixins","docId":"references/mixins"},{"type":"link","label":"Formatters","href":"/docs/references/formatters","docId":"references/formatters"},{"type":"link","label":"Stylable Variables","href":"/docs/references/st-variables","docId":"references/st-variables"},{"type":"link","label":"CSS Custom Properties","href":"/docs/references/css-vars","docId":"references/css-vars"},{"type":"link","label":"Scoping","href":"/docs/references/st-scope","docId":"references/st-scope"},{"type":"link","label":"Namespace","href":"/docs/references/namespace","docId":"references/namespace"},{"type":"link","label":"Using External Assets","href":"/docs/references/using-external-assets","docId":"references/using-external-assets"},{"type":"link","label":"Keyframes","href":"/docs/references/keyframes","docId":"references/keyframes"}]},"docs":{"attributions":{"id":"attributions","title":"Attributions","description":"Landing Page Images"},"getting-started/install-configure":{"id":"getting-started/install-configure","title":"Installation","description":"There are currently two options for installing and working with Stylable as described in the following sections.","sidebar":"Discover"},"getting-started/intro":{"id":"getting-started/intro","title":"Intro","description":"What is Stylable","sidebar":"Discover"},"getting-started/nextjs-integration":{"id":"getting-started/nextjs-integration","title":"NextJS Integration","description":"There are few steps you need to follow to integrate Stylable in your NextJS project.","sidebar":"Discover"},"getting-started/react-integration":{"id":"getting-started/react-integration","title":"React Integration","description":"You can manually integrate Stylable with a React component as described below. You can also build your own helpers.","sidebar":"Discover"},"getting-started/storybook-integration":{"id":"getting-started/storybook-integration","title":"Storybook Integration","description":"To integrate Stylable with Storybook, configure your Storybook webpack configuration and add the following snippet.","sidebar":"Discover"},"getting-started/stylable-intelligence":{"id":"getting-started/stylable-intelligence","title":"Stylable Intelligence","description":"Stylable Intelligence is an extension implementing the Language Server Protocol that provides IDE support for Stylable. It currently includes:","sidebar":"Discover"},"getting-started/typescript-integration":{"id":"getting-started/typescript-integration","title":"TypeScript Integration","description":"Stylable requires .st.css stylesheets to be imported into your .ts/*.tsx files for class names, states, variables, or keyframes to be applied to your components.","sidebar":"Discover"},"guides/component-best-practices":{"id":"guides/component-best-practices","title":"Stylable Component - Best Practices","description":"Stylable components should be easily stylable and themable from the outside. This means that the stylesheet describing the component CSS should be as simple and generic as possible, and should expose a clear and concise API for its internal parts.","sidebar":"Guides"},"guides/component-variants":{"id":"guides/component-variants","title":"Component Variants","description":"When building a Stylable component library or a Stylable application, it is useful to define several semantic \\"flavors\\" of some components, for example a Button component that represents cancel or a Gallery component for the main gallery instance.","sidebar":"Guides"},"guides/components-basics":{"id":"guides/components-basics","title":"Component Basics","description":"This guide walks you through the basics of how to style and work with components using Stylable.","sidebar":"Guides"},"guides/migration-v3":{"id":"guides/migration-v3","title":"Migrating to Stylable v3","description":"This guide is intended to help migrate Stylable version 1 to Stylable version 2 or 3.","sidebar":"Guides"},"guides/migration-v5":{"id":"guides/migration-v5","title":"Migrating to Stylable v5","description":"The purpose of this document is to help migrate projects using Stylable to v5.","sidebar":"Guides"},"guides/project-commons":{"id":"guides/project-commons","title":"Project Commons","description":"The goal of the project file is to contain the CSS commons for the project, including variables, component variants and shared classes.","sidebar":"Guides"},"guides/runtime":{"id":"guides/runtime","title":"Runtime","description":"Imported Stylable stylesheets contain minimal runtime code to help define the structure and state of the component.","sidebar":"Guides"},"guides/shared-classes":{"id":"guides/shared-classes","title":"Shared Classes","description":"When building a Stylable component library or a Stylable application, it is useful to reuse classes that can be shared across components to achieve common CSS with lower specificity.","sidebar":"Guides"},"guides/ssr":{"id":"guides/ssr","title":"Supporting Server Side Rendering","description":"Server side rendering (SSR) is an approach to serving JavaScript rendered web applications (such as React, Vue, Angular, etc...) that tries to improve time-to-paint, SEO support and more.","sidebar":"Guides"},"guides/stylable-application":{"id":"guides/stylable-application","title":"Build a Stylable Application","description":"When building a Stylable application, you want to share definitions between parts of the application and consume 3rd party Stylable component libraries.","sidebar":"Guides"},"guides/stylable-component-library":{"id":"guides/stylable-component-library","title":"Create a Stylable Component Library","description":"Here are some guidelines we gathered related to this project that you may be interested in following if you build your own library.","sidebar":"Guides"},"references/cheatsheet":{"id":"references/cheatsheet","title":"Specification Overview","description":"CSS Terminology","sidebar":"Specification Reference"},"references/class-selectors":{"id":"references/class-selectors","title":"CSS Class Selectors","description":"You use CSS classes to define the local name of internal component parts. For example, you can define a .button in a menu component.","sidebar":"Specification Reference"},"references/css-vars":{"id":"references/css-vars","title":"CSS Custom Properties (CSS vars)","description":"CSS Custom Properties provides the ability to define and re-use variables that participate in the runtime cascade.","sidebar":"Specification Reference"},"references/custom-selectors":{"id":"references/custom-selectors","title":"Custom Selectors","description":"You use custom selectors to define an alias that can match complex selectors.","sidebar":"Specification Reference"},"references/extend-stylesheet":{"id":"references/extend-stylesheet","title":"Extend Stylable Stylesheet","description":"Use the -st-extends directive rule to extend a CSS class with another stylesheet. This enables you to style pseudo-classes and pseudo-elements of the extended stylesheet.","sidebar":"Specification Reference"},"references/formatters":{"id":"references/formatters","title":"Formatters","description":"Formatters are functions that return a single CSS declaration value. They can receive arguments, process them and return the value.","sidebar":"Specification Reference"},"references/global-selectors":{"id":"references/global-selectors","title":"Global Selectors","description":"In Stylable, selectors are scoped to the stylesheet. But what if you want to target global or other selectors that are not scoped? You can use the :global() directive selector.","sidebar":"Specification Reference"},"references/imports":{"id":"references/imports","title":"Imports","description":"Stylable enables you to import other stylesheets and modules in a way that is similar to JS Imports. You can then use the stylesheet or module as it\'s been defined, or just one or more of its named values, in your own Stylable stylesheet.","sidebar":"Specification Reference"},"references/keyframes":{"id":"references/keyframes","title":"Keyframes","description":"In CSS, @keyframes exhibit a behavior similar to classes where all names are global and can potentially clash in the DOM.","sidebar":"Specification Reference"},"references/mixins":{"id":"references/mixins","title":"Mixins","description":"Stylable mixins enable you to reuse complex styles and CSS behaviors, defined in CSS or Javascript, and apply them to any style-rule during build time.","sidebar":"Specification Reference"},"references/namespace":{"id":"references/namespace","title":"Namespace","description":"Manual Namespace","sidebar":"Specification Reference"},"references/pseudo-classes":{"id":"references/pseudo-classes","title":"Pseudo-Classes","description":"In addition to CSS\'s native pseudo-classes, likenth-child(), Stylable enables you to define custom pseudo-classes so that you can apply styles to your components based on state.","sidebar":"Specification Reference"},"references/pseudo-elements":{"id":"references/pseudo-elements","title":"Pseudo-Elements","description":"In addition to CSS\'s native pseudo-elements, Stylable stylesheets automatically expose CSS classes as custom pseudo-elements. This enables you to access internal parts of a component to apply styling.","sidebar":"Specification Reference"},"references/root":{"id":"references/root","title":"Root","description":"Every Stylable stylesheet has a reserved class called root that matches the root node of the component.","sidebar":"Specification Reference"},"references/st-scope":{"id":"references/st-scope","title":"Scoping","description":"Stylable scope enables you to wrap several style-rules using a single directive.","sidebar":"Specification Reference"},"references/st-variables":{"id":"references/st-variables","title":"Stylable Variables","description":"Use variables to define common values to be used across the stylesheet and so they can be exposed for sharing and theming.","sidebar":"Specification Reference"},"references/state-parameter-types":{"id":"references/state-parameter-types","title":"Parameter Types to Use with Pseudo-Classes","description":"Custom pseudo-classes can either be simple or accept parameters.","sidebar":"Specification Reference"},"references/tag-selectors":{"id":"references/tag-selectors","title":"CSS Tag/Component Selector","description":"Like CSS type selectors, Stylable tag selectors can match the names of elements in the DOM.","sidebar":"Specification Reference"},"references/using-external-assets":{"id":"references/using-external-assets","title":"Using External Assets","description":"Stylable supports usage of url functions to use assets as you normally would in CSS.","sidebar":"Specification Reference"},"style-guide":{"id":"style-guide","title":"Style Guide","description":"You can write content using GitHub-flavored Markdown syntax."},"unpublished/extending-through-js":{"id":"unpublished/extending-through-js","title":"Extend Through JavaScript","description":"Stylable is a CSS pre-processor, but developers can extend their Stylable definitions utlizing CSS, JavaScript or both while maintaining code hinting and type checking for validations."},"unpublished/FAQ":{"id":"unpublished/FAQ","title":"Frequently Asked Questions","description":"0. What were the inspirations for developing Stylable?"}}}')}}]);