"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[2303],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,y=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(y,l(l({ref:t},p),{},{components:n})):o.createElement(y,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9497:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={id:"stylable-component-library",title:"Create a Stylable Component Library",sidebar_label:"Stylable Component Library"},l=void 0,s={unversionedId:"guides/stylable-component-library",id:"guides/stylable-component-library",title:"Create a Stylable Component Library",description:"Here are some guidelines we gathered related to this project that you may be interested in following if you build your own library.",source:"@site/docs/guides/stylable-component-library.md",sourceDirName:"guides",slug:"/guides/stylable-component-library",permalink:"/docs/guides/stylable-component-library",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/guides/stylable-component-library.md",tags:[],version:"current",frontMatter:{id:"stylable-component-library",title:"Create a Stylable Component Library",sidebar_label:"Stylable Component Library"},sidebar:"Guides",previous:{title:"Stylable Application",permalink:"/docs/guides/stylable-application"},next:{title:"Project Commons",permalink:"/docs/guides/project-commons"}},i={},c=[{value:"Recommended folder structure",id:"recommended-folder-structure",level:2},{value:"The <code>project.st.css</code> file",id:"the-projectstcss-file",level:2},{value:"Customizable components",id:"customizable-components",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Here are some guidelines we gathered related to this project that you may be interested in following if you build your own library."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Stylable")," enables you to author a component library, that can be themed, and easily consumed and styled, by other ",(0,r.kt)("strong",{parentName:"p"},"Stylable")," projects.  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Stylable")," is the styling, CSS side of working with components. For the ",(0,r.kt)("strong",{parentName:"p"},"Stylable")," CSS to be fully useful, it must integrate with a component library from another source, for example React."),(0,r.kt)("h2",{id:"recommended-folder-structure"},"Recommended folder structure"),(0,r.kt)("p",null,"As a best practice, we recommend following this folder structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"src/\n    |\n    --- components/\n    |   |\n    |   --- my-component/\n    |   |   |\n    |   |   my-component.jsx\n    |   |   my-component.st.css\n    |   |\n    |   project.st.css\n    |\n    --- themes/\n    |   |\n    |   backoffice-theme.st.css\n    |   app-theme.st.css\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"src/components")," folder contains:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"a project stylesheet describing the project CSS API"),(0,r.kt)("li",{parentName:"ul"},"a folder for each component with its stylable stylesheet"))),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"src/themes")," folder contains the relevant theme files.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Although you may think the project file should be at the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," level, we recommend you to create the ",(0,r.kt)("inlineCode",{parentName:"p"},"project.st.css")," file at the same level as your components because there are many links between this file and your component files.")),(0,r.kt)("h2",{id:"the-projectstcss-file"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"project.st.css")," file"),(0,r.kt)("p",null,"As a first step, create a ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/project-commons"},"project commons stylesheet")," named ",(0,r.kt)("inlineCode",{parentName:"p"},"project.st.css")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/components")," directory. This exposes the API for the project. "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It is recommended to leave the project's CSS rulesets empty with no declarations. These should be defined in a theme file. ")),(0,r.kt)("h2",{id:"customizable-components"},"Customizable components"),(0,r.kt)("p",null,"Your components should be as easy to style as possible. We recommend following these guidelines when planning: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Expose a good style API and its ",(0,r.kt)("a",{parentName:"li",href:"/docs/references/pseudo-classes"},"custom states"),". "),(0,r.kt)("li",{parentName:"ul"},"The component API should contain the minimum styling required for the component to function. For example some components may require layout. "),(0,r.kt)("li",{parentName:"ul"},"The effect of CSS combinations is not always easy to understood and styles are generally less tested, therefore, we recommend adding comments that explain the reason for unclear CSS."),(0,r.kt)("li",{parentName:"ul"},"Reusable ",(0,r.kt)("a",{parentName:"li",href:"/docs/references/st-variables"},"vars")," should be declared outside of the component. The component can use vars for common values that are less likely to be override-able."),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("a",{parentName:"li",href:"/docs/guides/component-variants"},"component variants")," and ",(0,r.kt)("a",{parentName:"li",href:"/docs/guides/shared-classes"},"shared classes")," from the project file (",(0,r.kt)("inlineCode",{parentName:"li"},"project.st.css"),").")),(0,r.kt)("p",null,"More best practices for themable components can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/component-best-practices"},(0,r.kt)("strong",{parentName:"a"},"Stylable")," component best practices guide"),"."),(0,r.kt)("p",null,"In the following code, you can see a component described with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"2 colors used from project"),(0,r.kt)("li",{parentName:"ul"},"1 shared class ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},'/* app.st.css */\n@namespace "App";\n\n@st-import [color1, color2, emphasisBox] from "../project.st.css";\n\n.root {\n    color: value(color1);\n    background: value(color2);\n}\n.messageBox {\n    /* append emphasisBox CSS class to messageBox JS output */\n    -st-extends: emphasisBox;\n}\n')),(0,r.kt)("p",null,"Read more about using themes in ",(0,r.kt)("a",{parentName:"p",href:"./stylable-application#apply-component-library-theme"},"theme an application"),"."))}m.isMDXComponent=!0}}]);