"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[2605],{425:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},3992:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(7462),r=a(7294),l=a(6010),o=a(2957),i=a(6550),s=a(5238),u=a(3609),m=a(2560);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function c(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function k(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=c(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,u]=f({queryString:a,groupId:n}),[d,k]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,m.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=s??d;return p({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),k(e)}),[u,k,l]),tabValues:l}}var h=a(1048);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const m=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,a=m.indexOf(t),n=u[a].value;n!==i&&(d(t),s(n))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=m.indexOf(e.currentTarget)+1;t=m[a]??m[0];break}case"ArrowLeft":{const a=m.indexOf(e.currentTarget)-1;t=m[a]??m[m.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>m.push(e),onKeyDown:p,onClick:c},o,{className:(0,l.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function N(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=k(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(g,(0,n.Z)({},e,t)),r.createElement(N,(0,n.Z)({},e,t)))}function y(e){const t=(0,h.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},6394:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>k,frontMatter:()=>s,metadata:()=>m,toc:()=>c});var n=a(7462),r=(a(7294),a(4137)),l=a(3992),o=a(425),i=a(2053);const s={id:"programmatic-api",title:"Programmatic API"},u=void 0,m={unversionedId:"references/programmatic-api",id:"references/programmatic-api",title:"Programmatic API",description:"Stylable instance",source:"@site/docs/references/programmatic-api.mdx",sourceDirName:"references",slug:"/references/programmatic-api",permalink:"/docs/references/programmatic-api",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/programmatic-api.mdx",tags:[],version:"current",frontMatter:{id:"programmatic-api",title:"Programmatic API"},sidebar:"Specification Reference",previous:{title:"Runtime",permalink:"/docs/references/runtime"}},d={},c=[{value:"Stylable instance",id:"stylable-instance",level:2},{value:"Configuration",id:"configuration",level:3},{value:"<code>MinimalFS</code>",id:"minimalfs",level:3},{value:"<code>ResolveNamespace</code>",id:"resolvenamespace",level:3},{value:"Basic example",id:"basic-example",level:4},{value:"<code>ModuleResolver</code>",id:"moduleresolver",level:3},{value:"<code>RequireModule</code>",id:"requiremodule",level:3}],p={toc:c},f="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"stylable-instance"},"Stylable instance"),(0,r.kt)("p",null,"Stylable is usually consumed through one of its available integration, for more specific or advanced use-cases, the programmatic API can be used for greater control on how Stylable operates."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The APIs described here are treated as stable, and available for use. Any other API exposed by Stylable not described here may changed, and should not be dependant on.")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Stylable")," class provided from ",(0,r.kt)("inlineCode",{parentName:"p"},"@stylable/core")," requires configuration to initialize."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Initialize Stylable instance"',title:'"Initialize',Stylable:!0,'instance"':!0},"import fs from 'node:fs';\nimport { Stylable } from '@stylable/core';\n\n// minimal required configuration\nStylable({ fs, projectRoot: __dirname });\n")),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#minimalfs"},(0,r.kt)("inlineCode",{parentName:"a"},"MinimalFS"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"Filesystem instance to use")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"projectRoot")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},"The project root directory path")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"production"')),(0,r.kt)("td",{parentName:"tr",align:null},"Development or production mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resolveNamespace")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#resolvenamespace"},(0,r.kt)("inlineCode",{parentName:"a"},"ResolveNamespace"))),(0,r.kt)("td",{parentName:"tr",align:null},"default resolver depends on running context"),(0,r.kt)("td",{parentName:"tr",align:null},"Function to determine namespacing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resolveModule")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#moduleresolver"},(0,r.kt)("inlineCode",{parentName:"a"},"ModuleResolver"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/webpack/enhanced-resolve"},(0,r.kt)("inlineCode",{parentName:"a"},"enhanced-resolve"))),(0,r.kt)("td",{parentName:"tr",align:null},"Module resolver to be used for all import paths and ",(0,r.kt)("inlineCode",{parentName:"td"},"url()")," requests")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resolveOptions")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(i.Z,{className:"inline-code",mdxType:"CodeBlock"},"{",(0,r.kt)("br",null)," alias?: any;",(0,r.kt)("br",null)," symlinks?: boolean;",(0,r.kt)("br",null),"}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(i.Z,{className:"inline-code",mdxType:"CodeBlock"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Options that are passed to the ",(0,r.kt)("strong",{parentName:"td"},"default")," module resolver")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"requrieModule")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#requiremodule"},(0,r.kt)("inlineCode",{parentName:"a"},"RequireModule"))),(0,r.kt)("td",{parentName:"tr",align:null},"none"),(0,r.kt)("td",{parentName:"tr",align:null},"Require module that receives a path, and attempts to return a module")))),(0,r.kt)("h3",{id:"minimalfs"},(0,r.kt)("inlineCode",{parentName:"h3"},"MinimalFS")),(0,r.kt)("p",null,"Stylable minimal required file system interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="MinimalFS interface"',title:'"MinimalFS','interface"':!0},"interface MinimalFS {\n  statSync: (filePath: string) => { mtime: Date };\n  readFileSync: (filePath: string, encoding: 'utf8') => string;\n  readlinkSync: (filePath: string) => string;\n}\n")),(0,r.kt)("h3",{id:"resolvenamespace"},(0,r.kt)("inlineCode",{parentName:"h3"},"ResolveNamespace")),(0,r.kt)("p",null,"Provide exact control of the namespacing mechanism by providing a function that accepts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"namespace")," - a stylesheet source namespace - determined by the ",(0,r.kt)("inlineCode",{parentName:"li"},"@st-namespace")," if exists, and falls back to the filename"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origin")," - an origin path - path to the source stylesheet")),(0,r.kt)("p",null,'This function will then return a string to be used as the "namespace" for stylesheet definitions.'),(0,r.kt)("h4",{id:"basic-example"},"Basic example"),(0,r.kt)("p",null,"An example for a basic namespace resolver, that generates unique verbose namespaces based on the component namespace and origin path of the stylesheet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Resolve namespace example"',title:'"Resolve',namespace:!0,'example"':!0},"const resolveNamespace: ResolveNamespace = (namespace: string, origin: string): string {\n    return namespace + hash(origin);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="comp.st.css"',title:'"comp.st.css"'},".root {}\n\n/* OUTPUT */\n.comp1169059893__root {}\n")),(0,r.kt)("h3",{id:"moduleresolver"},(0,r.kt)("inlineCode",{parentName:"h3"},"ModuleResolver")),(0,r.kt)("p",null,"Override Stylable's default module resolver, to control path resolution according to your projects' needs."),(0,r.kt)("p",null,"The default module resolver is a function that accepts two arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"directoryPath")," - the directory path to resolve from"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"request")," - the module request to resolve")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('node:fs');\nconst { createDefaultResolver, Stylable } = require('@stylable/core');\n\nconst defaultResolver = createDefaultResolver(fs);\nconst stylable = new Stylable({\n  projectRoot: 'path/to/project/root',\n  filesystem: fs,\n  resolveModule: (directoryPath, request) => {\n    if (request.startsWith('my-custom-module')) {\n      return '/path/to/my-custom-module';\n    }\n\n    return defaultResolver(directoryPath, request);\n  },\n});\n")),(0,r.kt)("h3",{id:"requiremodule"},(0,r.kt)("inlineCode",{parentName:"h3"},"RequireModule")),(0,r.kt)("p",null,"Defines a function to require imported JavaScript modules from a path, used when a JavaScript ",(0,r.kt)("a",{parentName:"p",href:"./mixins#javascript-mixins"},"Mixins")," or ",(0,r.kt)("a",{parentName:"p",href:"./formatters"},"Formatters")," is used within a Stylable stylesheet."),(0,r.kt)(l.Z,{groupId:"runtimeEnv",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"nodejs",label:"NodeJS",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('node:fs');\nconst { Stylable } = require('@stylable/core');\n\nconst stylable = new Stylable({\n    projectRoot: 'path/to/project/root',\n    filesystem: fs,\n    requireModule: require\n})\n"))),(0,r.kt)(o.Z,{value:"memoryfs",label:"Memory FS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { Stylable } = require('@stylable/core');\n\nconst stylable = new Stylable({\n    projectRoot: 'path/to/project/root',\n    filesystem: memoryFS,\n    requireModule(path: string) {\n        const _module = {\n            id,\n            exports: {},\n        };\n        try {\n            // create a module evaluation function\n            const fn = new Function(\n                'module',\n                'exports',\n                'require',\n                fs.readFileSync(id, { encoding: 'utf8', flag: 'r' })\n            );\n            // evaluate the module\n            fn(_module, _module.exports, requireModule);\n        } catch (e) { \n            throw new Error('Cannot require file: ' + id + 'reason: ' + e.message);\n        }\n        return _module.exports;\n    }\n})\n")))))}k.isMDXComponent=!0}}]);