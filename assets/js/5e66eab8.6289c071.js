"use strict";(self.webpackChunkstylable_io=self.webpackChunkstylable_io||[]).push([[9604],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=s.createContext({}),i=function(e){var t=s.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return s.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(n),g=r,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return n?s.createElement(m,o(o({ref:t},p),{},{components:n})):s.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var i=2;i<a;i++)o[i]=n[i];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var s=n(7462),r=(n(7294),n(3905));const a={id:"extend-stylesheet",title:"Extend"},o=void 0,l={unversionedId:"references/extend-stylesheet",id:"references/extend-stylesheet",title:"Extend",description:"Use the -st-extends directive rule to extend a CSS class with another stylesheet. This enables you to style pseudo-classes and pseudo-elements of the extended stylesheet.",source:"@site/docs/references/extend-stylesheet.md",sourceDirName:"references",slug:"/references/extend-stylesheet",permalink:"/docs/references/extend-stylesheet",draft:!1,editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/references/extend-stylesheet.md",tags:[],version:"current",frontMatter:{id:"extend-stylesheet",title:"Extend"},sidebar:"Specification Reference",previous:{title:"Root",permalink:"/docs/references/root"},next:{title:"Global Selector",permalink:"/docs/references/global-selectors"}},c={},i=[{value:"Extending stylesheets vs. classes",id:"extending-stylesheets-vs-classes",level:2},{value:"Extending a root",id:"extending-a-root",level:3},{value:"Extending an inner part",id:"extending-an-inner-part",level:3},{value:"Extending example",id:"extending-example",level:3}],p={toc:i};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-st-extends")," directive rule to extend a CSS class with another stylesheet. This enables you to style ",(0,r.kt)("a",{parentName:"p",href:"/docs/references/pseudo-classes"},"pseudo-classes")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/references/pseudo-elements"},"pseudo-elements")," of the extended stylesheet."),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"-st-extends")," can be applied only to ",(0,r.kt)("a",{parentName:"p",href:"/docs/references/class-selectors"},"class selectors")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/references/root"},"root"),".")),(0,r.kt)("p",null,"In this example, the stylesheet is extending the ",(0,r.kt)("inlineCode",{parentName:"p"},"toggle-button.st.css")," stylesheet. The ",(0,r.kt)("inlineCode",{parentName:"p"},"checkBtn")," class has a ",(0,r.kt)("inlineCode",{parentName:"p"},"label"),", which is a custom pseudo-element, and has a custom pseudo-class, ",(0,r.kt)("inlineCode",{parentName:"p"},"toggled"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n\n@st-import ToggleButton from "./toggle-button.st.css";\n\n.checkBtn {\n  -st-extends: ToggleButton;\n  background: white;\n}\n.checkBtn::label {\n  color: green;\n} /* style pseudo element label */\n.checkBtn:toggled::label {\n  color: red;\n} /* style pseudo element label when check-box is toggled */\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__checkBtn {\n  background: white;\n}\n.Page__checkBtn .ToggleButton__label {\n  color: green;\n}\n.Page__checkBtn.ToggleButton--toggled .ToggleButton__label {\n  color: red;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'/* page.jsx */\nimport React from "react";\nimport { style, classes } from "./comp.st.css";\n\nimport ToggleButton from "./toggle-button";\n\nclass Page {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={style(classes.root, this.props.className)}>\n        <ToggleButton className={classes.checkBtn} />\n      </div>\n    );\n  }\n}\n')),(0,r.kt)("h2",{id:"extending-stylesheets-vs-classes"},"Extending stylesheets vs. classes"),(0,r.kt)("p",null,"Stylable offers you the ability to import a stylesheet (default import) or class (named import). The two methods differ in their runtime export values."),(0,r.kt)("h3",{id:"extending-a-root"},"Extending a root"),(0,r.kt)("p",null,"When extending a ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," class, Stylable assumes the component itself will place its own ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," class, and as such Stylable exports only the local className during runtime."),(0,r.kt)("p",null,"The extended component will receive the extending (external) class name through its props and concat it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," node class list."),(0,r.kt)("h3",{id:"extending-an-inner-part"},"Extending an inner part"),(0,r.kt)("p",null,"Any class other than ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," defined in a Stylesheet is considered an inner part. Usually in Stylable extending a class signifies the use of a ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/component-variants"},"variant")," or composed","*"," utility class."),(0,r.kt)("p",null,"*"," - Stylable currently does not support composing multiple classes on the same part. We hope to introduce this capability in the near future."),(0,r.kt)("h3",{id:"extending-example"},"Extending example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n\n@st-import ToggleButton from "./toggle-button.st.css";\n@st-import [toggleVariant] from "./toggle-button-variant.st.css";\n\n.defaultCheckBtn {\n  -st-extends: ToggleButton; /* extending stylesheet */\n}\n.variantCheckBtn {\n  -st-extends: toggleVariant; /* extending class */\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__defaultCheckBtn {\n}\n.Page__variantCheckBtn {\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'/* runtime JS output*/\nimport { classes } from "./page.st.css";\n\nconsole.log(classes.defaultCheckBtn); // "Page__defaultCheckBtn"\nconsole.log(classes.variantCheckBtn); // "Page__variantCheckBtn ToggleButton__toggleVariant"\n')))}d.isMDXComponent=!0}}]);